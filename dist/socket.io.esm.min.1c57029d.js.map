{"version":3,"sources":["../build/esm/index.js","../node_modules/parseuri/index.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/url.js"],"names":["Object","re","parts","parseuri","str","src","b","indexOf","e","substring","replace","length","query","data","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","SEPARATOR","String","fromCharCode","Transport","writable","readyState","socket","onError","msg","desc","Error","description","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","decode","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","constructor","polling","name","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","count","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","Request","method","async","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","onSuccess","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","transports","websocket","super","location","isSSL","protocol","request","assign","req","pollXhr","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","o","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","add","decodeString","BINARY_EVENT","BINARY_ACK","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","c","payload","isPayloadValid","destroy","finishedReconstruction","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","reconPack","binData","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","listener","prependAny","offAny","listenersAny","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","sameNamespace","forceNew","multiplex"],"mappings":"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","file":"socket.io.esm.min.1c57029d.js","sourceRoot":"../dev_src","sourcesContent":["import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"]}