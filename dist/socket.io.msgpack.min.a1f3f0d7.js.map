{"version":3,"sources":["../build/esm/index.js","../node_modules/parseuri/index.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/notepack.io/browser/encode.js","../node_modules/notepack.io/browser/decode.js","../node_modules/notepack.io/lib/index.js","../node_modules/component-emitter/index.js","../node_modules/socket.io-msgpack-parser/index.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/url.js"],"names":["lookup","re","parts","parseuri","str","src","b","indexOf","e","substring","replace","length","query","data","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","Uint8Array","charCodeAt","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","SEPARATOR","String","fromCharCode","Transport","writable","readyState","socket","msg","desc","Error","description","doOpen","doClose","onClose","packets","write","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","decode","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","poll","onPause","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","_this3","onOpen","close","_this4","count","_this5","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","Request","req","request","method","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","name","Socket","_this","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","o","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","_this6","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","utf8Write","view","offset","c","setUint8","_encode","defers","value","hi","lo","size","_str","_length","_offset","isFinite","pow","_float","isArray","time","getTime","byteLength","_bin","toJSON","allKeys","Decoder","_buffer","_view","DataView","byteOffset","_array","_parse","_map","string","chr","end","byte","getUint8","prefix","getUint16","getUint32","getInt8","getFloat32","getFloat64","getInt16","getInt32","buf","deferIndex","deferWritten","nextOffset","defer","deferLength","bin","setFloat64","require$$0","decoder","require$$1","module","msgpack","PacketType","PacketType_1","CONNECT","DISCONNECT","EVENT","ACK","CONNECT_ERROR","isInteger","isString","isObject","Encoder","add","checkPacket","nsp","destroy","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","unshift","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","timer","_packet","onconnect","BINARY_EVENT","onevent","BINARY_ACK","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","undefined","listener","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","active","_close","delay","onreconnect","attempt","cache","_typeof","parsed","loc","test","href","sameNamespace","forceNew","multiplex"],"mappings":";;AA2CaA,IAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,IAAAA,SAAAA,EAAAA,GAAAA,WAAAA,oBAAAA,QAAAA,YAAAA,EAAAA,WAAAA,oBAAAA,OAAAA,OAAAA,QAAAA,IAAAA,mBAAAA,GAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,oBAAAA,WAAAA,WAAAA,GAAAA,MAAAA,GAAAA,IAAAA,CAAAA,KAAAA,WAAAA,aAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,UAAAA,EAAAA,OAAAA,UAAAA,SAAAA,GAAAA,OAAAA,EAAAA,IAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,SAAAA,EAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,OAAAA,QAAAA,SAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,UAAAA,GAAAA,IAAAA,IAAAA,KAAAA,EAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAAAA,IAAAA,OAAAA,IAAAA,MAAAA,KAAAA,WAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,UAAAA,sDAAAA,EAAAA,UAAAA,OAAAA,OAAAA,GAAAA,EAAAA,UAAAA,CAAAA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,OAAAA,eAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,OAAAA,eAAAA,KAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,OAAAA,gBAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,UAAAA,EAAAA,IAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,eAAAA,6DAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,WAAAA,GAAAA,oBAAAA,UAAAA,QAAAA,UAAAA,OAAAA,EAAAA,GAAAA,QAAAA,UAAAA,KAAAA,OAAAA,EAAAA,GAAAA,mBAAAA,MAAAA,OAAAA,EAAAA,IAAAA,OAAAA,QAAAA,UAAAA,QAAAA,KAAAA,QAAAA,UAAAA,QAAAA,GAAAA,gBAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,GAAAA,OAAAA,WAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,MAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,QAAAA,EAAAA,EAAAA,MAAAA,KAAAA,WAAAA,OAAAA,SAAAA,EAAAA,GAAAA,GAAAA,IAAAA,UAAAA,EAAAA,IAAAA,mBAAAA,GAAAA,OAAAA,EAAAA,QAAAA,IAAAA,EAAAA,MAAAA,IAAAA,UAAAA,4DAAAA,OAAAA,EAAAA,GAAAA,CAAAA,KAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,oBAAAA,SAAAA,QAAAA,IAAAA,QAAAA,IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,SAAAA,EAAAA,GAAAA,MAAAA,OAAAA,UAAAA,eAAAA,KAAAA,EAAAA,IAAAA,QAAAA,EAAAA,EAAAA,MAAAA,OAAAA,EAAAA,CAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,KAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,ECpCTC,IAAAA,EAAK,0OAELC,EAAQ,CACR,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAGzIC,EAAiB,SAAkBC,GAC3BC,IAAAA,EAAMD,EACNE,EAAIF,EAAIG,QAAQ,KAChBC,EAAIJ,EAAIG,QAAQ,MAEV,GAAND,IAAiB,GAANE,IACXJ,EAAMA,EAAIK,UAAU,EAAGH,GAAKF,EAAIK,UAAUH,EAAGE,GAAGE,QAAQ,KAAM,KAAON,EAAIK,UAAUD,EAAGJ,EAAIO,SAAAA,IAAAA,IAsC3EC,EACfC,EApCAC,EAAIb,EAAGc,KAAKX,GAAO,IACnBY,EAAM,GACNC,EAAI,GAEDA,KACHD,EAAId,EAAMe,IAAMH,EAAEG,IAAM,GAAA,OAGlB,GAANX,IAAiB,GAANE,IACXQ,EAAIE,OAASb,EACbW,EAAIG,KAAOH,EAAIG,KAAKV,UAAU,EAAGO,EAAIG,KAAKR,OAAS,GAAGD,QAAQ,KAAM,KACpEM,EAAII,UAAYJ,EAAII,UAAUV,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EM,EAAIK,SAAAA,GAGRL,EAAIM,UAMR,SAAmBC,EAAKC,GAChBC,IACAC,EAAQF,EAAKd,QADN,WACoB,KAAKiB,MAAM,KASnCD,MAPHF,KAAAA,EAAKI,OAAO,EAAG,IAA6B,IAAhBJ,EAAKb,QACjCe,EAAMG,OAAO,EAAG,GAEhBL,KAAAA,EAAKI,OAAOJ,EAAKb,OAAS,EAAG,IAC7Be,EAAMG,OAAOH,EAAMf,OAAS,EAAG,GAG5Be,EAXX,CAN8BV,EAAKA,EAAG,MAClCA,EAAIc,UAmBelB,EAnBUI,EAAG,MAoB5BH,EAAO,GAEXD,EAAMF,QAAQ,4BAA6B,SAAUqB,EAAIC,EAAIC,GACrDD,IACAnB,EAAKmB,GAAMC,KAIZpB,GA1BAG,GAAAA,EAAAA,CAAAA,QAAAA,IC/BX,IACEkB,EAAAA,QAA2C,oBAAnBC,gBACtB,oBAAqB,IAAIA,eAC3B,MAAOC,IAGPF,EAAAA,SAAAA,EAAiB,IAAA,EAAA,EAAA,QAAA,ECdK,oBAATG,KACAA,KAEgB,oBAAXC,OACLA,OAGAC,SAAS,cAATA,GCLA,SAAA,EAAUC,GACfC,IAAAA,EAAUD,EAAKC,QAAAA,IAGb,GAAA,oBAAuBN,kBAAoBM,GAAWC,GAAAA,OAC/C,IAAIP,eAGnB,MAAO3B,IAAAA,IACFiC,EAAAA,IAEU,OAAA,IAAIE,EAAW,CAAC,UAAUC,OAAO,UAAUC,KAAK,OAAM,qBAEjE,MAAOrC,KCfCsC,SAAAA,EAAKvB,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAQwB,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAClBA,OAAAA,EAAKC,OAAO,SAACC,EAAKC,GACjB3B,OAAAA,EAAI4B,eAAeD,KACnBD,EAAIC,GAAK3B,EAAI2B,IAEVD,GACR,IAGDG,IAAAA,EAAqBC,WACrBC,EAAuBC,aACbC,SAAAA,EAAsBjC,EAAKiB,GACnCA,EAAKiB,iBACLlC,EAAImC,aAAeN,EAAmBO,KAAKhB,GAC3CpB,EAAIqC,eAAiBN,EAAqBK,KAAKhB,KAG/CpB,EAAImC,aAAeL,WAAWM,KAAKhB,GACnCpB,EAAIqC,eAAiBL,aAAaI,KAAKhB,ICd/C,IAAA,EAAkBkB,EAQTA,SAAAA,EAAQtC,GACXA,GAAAA,EAAK,OAWX,SAAeA,GACR,IAAA,IAAIuC,KAAOD,EAAQE,UACtBxC,EAAIuC,GAAOD,EAAQE,UAAUD,GAExBvC,OAAAA,EAJT,CAXwBA,GAAAA,EA2BhBwC,UAAUC,GAClBH,EAAQE,UAAUE,iBAAmB,SAASC,EAAOC,GAAAA,OAAAA,KAC9CC,WAAaC,KAAKD,YAAc,IACpCC,KAAKD,WAAW,IAAMF,GAASG,KAAKD,WAAW,IAAMF,IAAU,IAC7DI,KAAKH,GACDE,MAAAA,EAaDN,UAAUQ,KAAO,SAASL,EAAOC,GAC9BH,SAAAA,IACFQ,KAAAA,IAAIN,EAAOF,GAChBG,EAAGM,MAAMJ,KAAMK,WAGjBV,OAAAA,EAAGG,GAAKA,EAAAA,KACHH,GAAGE,EAAOF,GACRK,MAAAA,EAaDN,UAAUS,IAClBX,EAAQE,UAAUY,eAClBd,EAAQE,UAAUa,mBAClBf,EAAQE,UAAUc,oBAAsB,SAASX,EAAOC,GAAAA,GAAAA,KACjDC,WAAaC,KAAKD,YAAc,GAGjC,GAAKM,UAAU/D,OAAAA,OAAAA,KACZyD,WAAa,GACXC,KAcLS,IAAAA,EAVAC,EAAYV,KAAKD,WAAW,IAAMF,GAAAA,IACjCa,EAAW,OAAOV,KAGnB,GAAA,GAAKK,UAAU/D,OAAAA,cACV0D,KAAKD,WAAW,IAAMF,GACtBG,KAKJ,IAAA,IAAIpD,EAAI,EAAGA,EAAI8D,EAAUpE,OAAQM,IAAAA,IACpC6D,EAAKC,EAAU9D,MACJkD,GAAMW,EAAGX,KAAOA,EAAI,CAC7BY,EAAUlD,OAAOZ,EAAG,GAAA,MAOC,OAAA,IAArB8D,EAAUpE,eACL0D,KAAKD,WAAW,IAAMF,GAGxBG,MAAAA,EAWDN,UAAUiB,KAAO,SAASd,GAC3BE,KAAAA,WAAaC,KAAKD,YAAc,GAAA,IAAA,IAEjCa,EAAO,IAAIC,MAAMR,UAAU/D,OAAS,GACpCoE,EAAYV,KAAKD,WAAW,IAAMF,GAE7BjD,EAAI,EAAGA,EAAIyD,UAAU/D,OAAQM,IACpCgE,EAAKhE,EAAI,GAAKyD,UAAUzD,GAGtB8D,GAAAA,EAEG,CAAI9D,EAAI,EAAR,IAAA,IAAWkE,GADhBJ,EAAYA,EAAUK,MAAM,IACIzE,OAAQM,EAAIkE,IAAOlE,EACjD8D,EAAU9D,GAAGwD,MAAMJ,KAAMY,GAItBZ,OAAAA,MAAAA,EAIDN,UAAUsB,aAAexB,EAAQE,UAAUiB,KAAAA,EAU3CjB,UAAUuB,UAAY,SAASpB,GAAAA,OAAAA,KAChCE,WAAaC,KAAKD,YAAc,GAC9BC,KAAKD,WAAW,IAAMF,IAAU,IAAA,EAWjCH,UAAUwB,aAAe,SAASrB,GAAAA,QAC9BG,KAAKiB,UAAUpB,GAAOvD,QC9K5B6E,IAAAA,EAAeC,OAAOC,OAAO,MACnCF,EAAY,KAAW,IACvBA,EAAY,MAAY,IACxBA,EAAY,KAAW,IACvBA,EAAY,KAAW,IACvBA,EAAY,QAAc,IAC1BA,EAAY,QAAc,IAC1BA,EAAY,KAAW,IACjBG,IAAAA,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,QAAQ,SAAA/B,GAC9B6B,EAAqBH,EAAa1B,IAAQA,IAE9C,IAAA,IAAMgC,EAAe,CAAEC,KAAM,QAASlF,KAAM,gBCXtCmF,EAAiC,mBAATC,MACT,oBAATA,MACqC,6BAAzCR,OAAO1B,UAAUmC,SAASC,KAAKF,MACjCG,EAA+C,mBAAhBC,YAO/BC,EAAe,SAAA,EAAiBC,EAAgBC,GALvCjF,IAAAA,EAKSwE,EAAAA,EAAAA,KAAMlF,EAAAA,EAAAA,KACtBmF,OAAAA,GAAkBnF,aAAgBoF,KAC9BM,EACOC,EAAS3F,GAGT4F,EAAmB5F,EAAM2F,GAG/BJ,IACJvF,aAAgBwF,cAfV9E,EAegCV,EAdN,mBAAvBwF,YAAYK,OACpBL,YAAYK,OAAOnF,GACnBA,GAAOA,EAAIoF,kBAAkBN,cAa3BE,EACOC,EAAS3F,GAGT4F,EAAmB,IAAIR,KAAK,CAACpF,IAAQ2F,GAI7CA,EAAShB,EAAaO,IAASlF,GAAQ,MAE5C4F,EAAqB,SAAC5F,EAAM2F,GACxBI,IAAAA,EAAa,IAAIC,WACvBD,OAAAA,EAAWE,OAAS,WACVC,IAAAA,EAAUH,EAAWI,OAAOrF,MAAM,KAAK,GAC7C6E,EAAS,IAAMO,IAEZH,EAAWK,cAAcpG,ICtC9BqG,EAAQ,mEAGRlH,EAA+B,oBAAfmH,WAA6B,GAAK,IAAIA,WAAW,KAC9DlG,EAAI,EAAGA,EAAIiG,EAAMvG,OAAQM,IAC9BjB,EAAOkH,EAAME,WAAWnG,IAAMA,ECE9BoG,IAAAA,ECLEjB,EAA+C,mBAAhBC,YAC/BiB,EAAe,SAACC,EAAeC,GACJ,GAAA,iBAAlBD,EAAAA,MACA,CACHxB,KAAM,UACNlF,KAAM4G,EAAUF,EAAeC,IAGjCzB,IAAAA,EAAOwB,EAAcG,OAAO,GACrB,MAAA,MAAT3B,EACO,CACHA,KAAM,UACNlF,KAAM8G,EAAmBJ,EAAc9G,UAAU,GAAI+G,IAG1C7B,EAAqBI,GAIjCwB,EAAc5G,OAAS,EACxB,CACEoF,KAAMJ,EAAqBI,GAC3BlF,KAAM0G,EAAc9G,UAAU,IAEhC,CACEsF,KAAMJ,EAAqBI,IARxBD,GAWT6B,EAAqB,SAAC9G,EAAM2G,GAC1BpB,GAAAA,EAAuB,CACjBwB,IAAAA,EFFQ,SAACC,GAGf5G,IAAAA,EAEA6G,EACAC,EACAC,EACAC,EAPAC,EAA+B,IAAhBL,EAAOlH,OACtBwE,EAAM0C,EAAOlH,OAEbwH,EAAI,EAMJN,MAAAA,EAAOA,EAAOlH,OAAS,KACvBuH,IACkC,MAA9BL,EAAOA,EAAOlH,OAAS,IACvBuH,KAIFE,IAAAA,EAAc,IAAI/B,YAAY6B,GAChCG,EAAQ,IAAIlB,WAAWiB,GAEtBnH,IAAAA,EAAI,EAAGA,EAAIkE,EAAKlE,GAAK,EACtB6G,EAAW9H,EAAO6H,EAAOT,WAAWnG,IACpC8G,EAAW/H,EAAO6H,EAAOT,WAAWnG,EAAI,IACxC+G,EAAWhI,EAAO6H,EAAOT,WAAWnG,EAAI,IACxCgH,EAAWjI,EAAO6H,EAAOT,WAAWnG,EAAI,IAExCoH,EAAMF,KAAQL,GAAY,EAAMC,GAAY,EAC5CM,EAAMF,MAAoB,GAAXJ,IAAkB,EAAMC,GAAY,EACnDK,EAAMF,MAAoB,EAAXH,IAAiB,EAAiB,GAAXC,EAGnCG,OAAAA,EA/BW,CEESvH,GAChB4G,OAAAA,EAAUG,EAASJ,GAGnB,MAAA,CAAEK,QAAAA,EAAchH,KAAAA,IAGzB4G,EAAY,SAAC5G,EAAM2G,GAEZ,MAAA,SADDA,GAEO3G,aAAgBwF,YAAc,IAAIJ,KAAK,CAACpF,IAGxCA,GC3CbyH,EAAYC,OAAOC,aAAa,ICCzBC,EAAAA,SAAAA,GAAAA,EAAAA,EAAkB5E,GAAlB4E,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAOGjG,GAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,KAAAA,OAEHkG,UAAAA,EACLlF,EAAAA,EAAAA,GAA4BhB,GAAAA,EACvBA,KAAOA,EAAAA,EACP5B,MAAQ4B,EAAK5B,MAAAA,EACb+H,WAAa,GAAA,EACbC,OAASpG,EAAKoG,OAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UAAAA,MASvB,SAAQC,EAAKC,GACH1G,IAAAA,EAAM,IAAI2G,MAAMF,GAEtBzG,OAAAA,EAAI2D,KAAO,iBAEX3D,EAAI4G,YAAcF,EAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,MAAAA,KAAAA,KACP,QAAS1G,GACbiC,OAAAA,CAAAA,IAAAA,OAAAA,MAOX,WACQ,MAAA,WAAaA,KAAKsE,YAAc,KAAOtE,KAAKsE,aAAAA,KACvCA,WAAa,UAAA,KACbM,UAEF5E,OAAAA,CAAAA,IAAAA,QAAAA,MAOX,WACQ,MAAA,YAAcA,KAAKsE,YAAc,SAAWtE,KAAKsE,aAAAA,KAC5CO,UAAAA,KACAC,WAEF9E,OAAAA,CAAAA,IAAAA,OAAAA,MAQX,SAAK+E,GACc/E,SAAAA,KAAKsE,YAAAA,KACXU,MAAMD,KAAAA,CAAAA,IAAAA,SAAAA,MAWnB,WACST,KAAAA,WAAa,OAAA,KACbD,UAAAA,EAAW,EAAA,EAAA,EAAA,WAAA,OAAA,MAAA,KAAA,KACL,UAAA,CAAA,IAAA,SAAA,MAQf,SAAO7H,GACGyI,IAAAA,EAAShC,EAAazG,EAAMwD,KAAKuE,OAAOpB,YACzC+B,KAAAA,SAASD,KAAAA,CAAAA,IAAAA,WAAAA,MAOlB,SAASA,GAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,MAAAA,KAAAA,KACM,SAAUA,KAAAA,CAAAA,IAAAA,UAAAA,MAOzB,WACSX,KAAAA,WAAa,SAAA,EAAA,EAAA,EAAA,WAAA,OAAA,MAAA,KAAA,KACP,aAAA,EAzGNF,GHDTe,EAAW,mEAAmE7H,MAAM,IAEpF8H,EAAM,GACNC,EAAO,EACPzI,EAAI,EAUC0I,SAAAA,EAAOC,GACVC,IAAAA,EAAU,GAAA,GAGZA,EAAUL,EAASI,EAjBV,IAiB0BC,EACnCD,EAAME,KAAKC,MAAMH,EAlBR,UAmBFA,EAAM,GAERC,OAAAA,EA0BAG,SAAAA,IACHC,IAAAA,EAAMN,GAAQ,IAAIO,MAElBD,OAAAA,IAAQ5C,GAAaqC,EAAO,EAAGrC,EAAO4C,GACnCA,EAAK,IAAKN,EAAOD,KAMnBzI,KAAAA,EAzDM,GAyDMA,IAAKwI,EAAID,EAASvI,IAAMA,EAK3C+I,EAAML,OAASA,EACfK,EAAMG,OAhCN,SAAgB/J,GACVwH,IAAAA,EAAU,EAET3G,IAAAA,EAAI,EAAGA,EAAIb,EAAIO,OAAQM,IAC1B2G,EAnCS,GAmCCA,EAAmB6B,EAAIrJ,EAAIsH,OAAOzG,IAGvC2G,OAAAA,GA0BTwC,IAAAA,EAAiBJ,EAAAA,EAAAA,CAAAA,OI3DA,SAAUzI,GACrBnB,IAAAA,EAAM,GAEL,IAAA,IAAIa,KAAKM,EACRA,EAAI4B,eAAelC,KACjBb,EAAIO,SAAQP,GAAO,KACvBA,GAAOiK,mBAAmBpJ,GAAK,IAAMoJ,mBAAmB9I,EAAIN,KAIzDb,OAAAA,GAAAA,OAUQ,SAASkK,GAAAA,IAAAA,IACpBC,EAAM,GACNC,EAAQF,EAAG3I,MAAM,KACZV,EAAI,EAAGwJ,EAAID,EAAM7J,OAAQM,EAAIwJ,EAAGxJ,IAAK,CACxCyJ,IAAAA,EAAOF,EAAMvJ,GAAGU,MAAM,KAC1B4I,EAAII,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAEtDH,OAAAA,IC/BIK,EAAAA,SAAAA,GAAAA,EAAAA,EAAgBnC,GAAhBmC,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,IAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,MAAAA,KAEIlG,YACJmG,SAAAA,EAAU,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAAA,IAKnB,WACW,MAAA,YAAA,CAAA,IAAA,SAAA,MAQX,WACSC,KAAAA,SAAAA,CAAAA,IAAAA,QAAAA,MAQT,SAAMC,GAAAA,IAAAA,EAAAA,KACGpC,KAAAA,WAAa,UACZqC,IAAAA,EAAQ,WACVC,EAAKtC,WAAa,SAClBoC,KAEA1G,GAAAA,KAAKwG,UAAYxG,KAAKqE,SAAU,CAC5BwC,IAAAA,EAAQ,EACHL,KAAAA,UACLK,IAAAA,KACK3G,KAAK,eAAgB,aACpB2G,GAASF,OAGd3G,KAAKqE,WACNwC,IAAAA,KACK3G,KAAK,QAAS,aACb2G,GAASF,YAKnBA,MAAAA,CAAAA,IAAAA,OAAAA,MAQR,WACSH,KAAAA,SAAAA,EAAU,KACVM,SAAAA,KACAnG,KAAK,UAAA,CAAA,IAAA,SAAA,MAOd,SAAOnE,GAAAA,IAAAA,EAAAA,MHpDW,SAACuK,EAAgB5D,GAAAA,IAAAA,IAC7B6D,EAAiBD,EAAezJ,MAAM2G,GACtCc,EAAU,GACPnI,EAAI,EAAGA,EAAIoK,EAAe1K,OAAQM,IAAK,CACtCqK,IAAAA,EAAgBhE,EAAa+D,EAAepK,GAAIuG,GACtD4B,GAAAA,EAAQ9E,KAAKgH,GACc,UAAvBA,EAAcvF,KAAAA,MAIfqD,OAAAA,GAVW,CGmEAvI,EAAMwD,KAAKuE,OAAOpB,YAAY3B,QAd3B,SAAAyD,GAET,GAAA,YAAciC,EAAK5C,YAA8B,SAAhBW,EAAOvD,MACxCwF,EAAKC,SAGL,UAAYlC,EAAOvD,KAAAA,OACnBwF,EAAKpC,WAAAA,EAIToC,EAAKhC,SAASD,KAKd,WAAajF,KAAKsE,aAAAA,KAEbkC,SAAAA,EAAU,KACV7F,KAAK,gBACN,SAAWX,KAAKsE,YAAAA,KACXmC,UAAAA,CAAAA,IAAAA,UAAAA,MAWjB,WAAA,IAAA,EAAA,KACUW,EAAQ,WACVC,EAAKrC,MAAM,CAAC,CAAEtD,KAAM,YAET1B,SAAAA,KAAKsE,WAChB8C,IAAAA,KAKKlH,KAAK,OAAQkH,KAAAA,CAAAA,IAAAA,QAAAA,MAU1B,SAAMrC,GAAAA,IAAAA,EAAAA,KACGV,KAAAA,UAAAA,EHzHS,SAACU,EAAS5C,GAEtB7F,IAAAA,EAASyI,EAAQzI,OACjB0K,EAAiB,IAAInG,MAAMvE,GAC7BgL,EAAQ,EACZvC,EAAQvD,QAAQ,SAACyD,EAAQrI,GAErBqF,EAAagD,GAAAA,EAAe,SAAA/B,GACxB8D,EAAepK,GAAKsG,IACdoE,IAAUhL,GACZ6F,EAAS6E,EAAexI,KAAKyF,QAVvB,CG0HAc,EAAS,SAAAvI,GACnB+K,EAAKC,QAAQhL,EAAM,WACf+K,EAAKlD,UAAAA,EACLkD,EAAK5G,KAAK,eAAA,CAAA,IAAA,MAAA,MAStB,WACQpE,IAAAA,EAAQyD,KAAKzD,OAAS,GACpBkL,EAASzH,KAAK7B,KAAKuJ,OAAS,QAAU,OACxCC,EAAO,IAEP,IAAU3H,KAAK7B,KAAKyJ,oBACpBrL,EAAMyD,KAAK7B,KAAK0J,gBAAkBlC,KAEjC3F,KAAKkC,gBAAmB3F,EAAMuL,MAC/BvL,EAAMwL,IAAM,GAGZ/H,KAAK7B,KAAKwJ,OACR,UAAYF,GAAqC,MAA3BO,OAAOhI,KAAK7B,KAAKwJ,OACpC,SAAWF,GAAqC,KAA3BO,OAAOhI,KAAK7B,KAAKwJ,SAC3CA,EAAO,IAAM3H,KAAK7B,KAAKwJ,MAErBM,IAAAA,EAAeC,EAAQ5C,OAAO/I,GAE5BkL,OAAAA,EACJ,QAF8C,IAArCzH,KAAK7B,KAAKgK,SAASjM,QAAQ,KAG5B,IAAM8D,KAAK7B,KAAKgK,SAAW,IAAMnI,KAAK7B,KAAKgK,UACnDR,EACA3H,KAAK7B,KAAKhB,MACT8K,EAAa3L,OAAS,IAAM2L,EAAe,QAAA,EA7J3C1B,GCKJ6B,SAAAA,KACHC,IAAAA,EAIK,MAHK,IAAIvK,EAAe,CAC3BM,SAAAA,IAEekK,aAEVC,GAAAA,SAAAA,GAAAA,EAAAA,EAAYhC,GAAZgC,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAOGpK,GAAAA,IAAAA,EAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,EAAAA,KAAAA,KACFA,GACkB,oBAAbqK,SAA0B,CAC3BC,IAAAA,EAAQ,WAAaD,SAASE,SAChCf,EAAOa,SAASb,KAEfA,IACDA,EAAOc,EAAQ,MAAQ,MAAA,EAEtBE,GACoB,oBAAbH,UACJrK,EAAKgK,WAAaK,SAASL,UAC3BR,IAASxJ,EAAKwJ,KAAAA,EACjBiB,GAAKzK,EAAKuJ,SAAWe,EAKxBI,IAAAA,EAAc1K,GAAQA,EAAK0K,YAAAA,OAAAA,EAC5B3G,eAAiBmG,IAAYQ,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UAAAA,MAQtC,WAAQ1K,IAAAA,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAO,GAAA,OAAA,EACGA,EAAM,CAAEwK,GAAI3I,KAAK2I,GAAIC,GAAI5I,KAAK4I,IAAM5I,KAAK7B,MAChD,IAAI2K,GAAQ9I,KAAKrD,MAAOwB,KAAAA,CAAAA,IAAAA,UAAAA,MASnC,SAAQ3B,EAAMsD,GAAAA,IAAAA,EAAAA,KACJiJ,EAAM/I,KAAKgJ,QAAQ,CACrBC,OAAQ,OACRzM,KAAMA,IAEVuM,EAAIpJ,GAAG,UAAWG,GAClBiJ,EAAIpJ,GAAG,QAAS,SAAA5B,GACZ6I,EAAKsC,QAAQ,iBAAkBnL,OAAAA,CAAAA,IAAAA,SAAAA,MAQvC,WAAA,IAAA,EAAA,KACUgL,EAAM/I,KAAKgJ,UACjBD,EAAIpJ,GAAG,OAAQK,KAAKmJ,OAAO7J,KAAKU,OAChC+I,EAAIpJ,GAAG,QAAS,SAAA5B,GACZmJ,EAAKgC,QAAQ,iBAAkBnL,KAAAA,KAE9BqL,QAAUL,MAAAA,EAlEVR,GAqEAO,GAAAA,SAAAA,GAAAA,EAAAA,EAAgBtJ,GAAhBsJ,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAOGnM,EAAKwB,GAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,GAEbgB,EAAAA,EAAAA,EAAAA,EAAAA,KAAAA,OAA4BhB,GAAAA,EACvBA,KAAOA,EAAAA,EACP8K,OAAS9K,EAAK8K,QAAU,MAAA,EACxBtM,IAAMA,EAAAA,EACN0M,OAAAA,IAAkBlL,EAAKkL,MAAAA,EACvB7M,UAAAA,IAAqB2B,EAAK3B,KAAO2B,EAAK3B,KAAO,KAAA,EAC7C6E,SAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,SAAAA,MAOT,WAAA,IAAA,EAAA,KACUlD,EAAOM,EAAKuB,KAAK7B,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAKC,UAAY4B,KAAK7B,KAAKwK,GAC3BxK,EAAKmL,UAAYtJ,KAAK7B,KAAKyK,GACrBW,IAAAA,EAAOvJ,KAAKuJ,IAAM,IAAIzL,EAAeK,GAAAA,IAEvCoL,EAAIC,KAAKxJ,KAAKiJ,OAAQjJ,KAAKrD,IAAKqD,KAAKqJ,OAAAA,IAE7BrJ,GAAAA,KAAK7B,KAAKsL,aAAAA,IAEL,IAAI7M,KADT2M,EAAIG,uBAAyBH,EAAIG,uBAAAA,GACnB1J,KAAK7B,KAAKsL,aACXtL,KAAAA,KAAKsL,aAAa3K,eAAelC,IACtC2M,EAAII,iBAAiB/M,EAAGoD,KAAK7B,KAAKsL,aAAa7M,IAK/D,MAAOT,IACH,GAAA,SAAW6D,KAAKiJ,OAAAA,IAEZM,EAAII,iBAAiB,eAAgB,4BAEzC,MAAOxN,IAAAA,IAGPoN,EAAII,iBAAiB,SAAU,OAEnC,MAAOxN,IAEkBoN,oBAAAA,IACrBA,EAAIK,gBAAkB5J,KAAK7B,KAAKyL,iBAEhC5J,KAAK7B,KAAK0L,iBACVN,EAAIO,QAAU9J,KAAK7B,KAAK0L,gBAE5BN,EAAIQ,mBAAqB,WACXR,IAAAA,EAAIjF,aAEV,MAAQiF,EAAIS,QAAU,OAAST,EAAIS,OACnCzC,EAAK0C,SAKL1C,EAAKlI,aAAa,WACdkI,EAAK2B,QAA8B,iBAAfK,EAAIS,OAAsBT,EAAIS,OAAS,IAC5D,KAGXT,EAAIW,KAAKlK,KAAKxD,MAElB,MAAOL,GAAAA,YAAAA,KAIEkD,aAAa,WACdkI,EAAK2B,QAAQ/M,IACd,GAGiB,oBAAbgO,WAAAA,KACFC,MAAQtB,EAAQuB,gBACrBvB,EAAQwB,SAAStK,KAAKoK,OAASpK,QAAAA,CAAAA,IAAAA,YAAAA,MAQvC,WACSW,KAAAA,KAAK,WAAA,KACL4J,YAAAA,CAAAA,IAAAA,SAAAA,MAOT,SAAO/N,GACEmE,KAAAA,KAAK,OAAQnE,GAAAA,KACbgO,cAAAA,CAAAA,IAAAA,UAAAA,MAOT,SAAQzM,GACC4C,KAAAA,KAAK,QAAS5C,GAAAA,KACdwM,SAAAA,KAAQ,CAAA,IAAA,UAAA,MAOjB,SAAQE,GAAAA,QAAAA,IACuBzK,KAAKuJ,KAAO,OAASvJ,KAAKuJ,IAAAA,CAAAA,GAAAA,KAGhDA,IAAIQ,mBAAqB3B,EAC1BqC,EAAAA,IAESlB,KAAAA,IAAImB,QAEb,MAAOvO,IAEa,oBAAbgO,iBACArB,EAAQwB,SAAStK,KAAKoK,OAAAA,KAE5Bb,IAAM,QAAA,CAAA,IAAA,SAAA,MAOf,WACU/M,IAAAA,EAAOwD,KAAKuJ,IAAIoB,aAClBnO,OAAAA,GAAAA,KACK2M,OAAO3M,KAAAA,CAAAA,IAAAA,QAAAA,MAQpB,WACS+N,KAAAA,cAAAA,EAxJAzB,GA6KJ8B,SAAAA,KACA,IAAA,IAAIhO,KAAKkM,GAAQwB,SACdxB,GAAQwB,SAASxL,eAAelC,IAChCkM,GAAQwB,SAAS1N,GAAG8N,QArBhC5B,GAAQuB,cAAgB,EACxBvB,GAAQwB,SAAW,GAMK,oBAAbH,WAEoB,mBAAhBU,YAEPA,YAAY,WAAYD,IAES,mBAArBhL,kBAEZA,iBADyB,eAAgBtB,EAAa,WAAa,SAChCsM,IAAAA,IC9P9BE,IAAAA,GACqC,mBAAZC,SAAqD,mBAApBA,QAAQC,QAEhE,SAAAvK,GAAMsK,OAAAA,QAAQC,UAAUC,KAAKxK,IAG7B,SAACA,EAAIpB,GAAiBA,OAAAA,EAAaoB,EAAI,IAGzCyK,GAAY5M,EAAW4M,WAAa5M,EAAW6M,aCHtDC,GAAqC,oBAAdC,WACI,iBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cCPTC,GAAa,CACtBC,UDOSC,SAAAA,GAAAA,EAAAA,EAAWtH,GAAXsH,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAOGvN,GAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,KAAAA,KACFA,IACD+D,gBAAkB/D,EAAK0K,YAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,OAAAA,IAOhC,WACW,MAAA,cAAA,CAAA,IAAA,SAAA,MAOX,WACS7I,GAAAA,KAAK2L,QAAAA,CAIJhP,IAAAA,EAAMqD,KAAKrD,MACXiP,EAAY5L,KAAK7B,KAAKyN,UAEtBzN,EAAOiN,GACP,GACA3M,EAAKuB,KAAK7B,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAC3LA,KAAAA,KAAKsL,eACVtL,EAAK0N,QAAU7L,KAAK7B,KAAKsL,cAAAA,IAGpBqC,KAAAA,GACyBV,GAIpB,IAAIF,GAAUvO,EAAKiP,EAAWzN,GAH9ByN,EACI,IAAIV,GAAUvO,EAAKiP,GACnB,IAAIV,GAAUvO,GAGhC,MAAOoB,GACIiC,OAAAA,KAAKW,KAAK,QAAS5C,GAEzB+N,KAAAA,GAAG3I,WAAanD,KAAKuE,OAAOpB,YD/CR,cAAA,KCgDpB4I,uBAAAA,CAAAA,IAAAA,oBAAAA,MAOT,WAAA,IAAA,EAAA,KACSD,KAAAA,GAAGE,OAAS,WACTpF,EAAKzI,KAAK8N,WACVrF,EAAKkF,GAAGI,QAAQC,QAEpBvF,EAAKO,UAAAA,KAEJ2E,GAAGM,QAAUpM,KAAK8E,QAAQxF,KAAKU,MAAAA,KAC/B8L,GAAGO,UAAY,SAAAC,GAAM1F,OAAAA,EAAKuC,OAAOmD,EAAG9P,OAAAA,KACpCsP,GAAGS,QAAU,SAAApQ,GAAKyK,OAAAA,EAAKsC,QAAQ,kBAAmB/M,MAAAA,CAAAA,IAAAA,QAAAA,MAQ3D,SAAM4I,GAAAA,IAAAA,EAAAA,KACGV,KAAAA,UAAAA,EAAW,IAAA,IAAA,EAAA,SAGPzH,GACCqI,IAAAA,EAASF,EAAQnI,GACjB4P,EAAa5P,IAAMmI,EAAQzI,OAAS,EAC1C2F,EAAagD,EAAQiC,EAAKhF,eAAgB,SAAA1F,GAAAA,IAoB9B0K,EAAK4E,GAAG5B,KAAK1N,GAMrB,MAAOL,IAEHqQ,GAGA1B,GAAS,WACL5D,EAAK7C,UAAAA,EACL6C,EAAKvG,KAAK,UACXuG,EAAK7H,iBArCXzC,EAAI,EAAGA,EAAImI,EAAQzI,OAAQM,IAAAA,EAA3BA,KAAAA,CAAAA,IAAAA,UAAAA,MA+Cb,gBAC2B,IAAZoD,KAAK8L,KAAAA,KACPA,GAAG1E,QAAAA,KACH0E,GAAK,QAAA,CAAA,IAAA,MAAA,MAQlB,WACQvP,IAAAA,EAAQyD,KAAKzD,OAAS,GACpBkL,EAASzH,KAAK7B,KAAKuJ,OAAS,MAAQ,KACtCC,EAAO,GAEFxJ,KAAAA,KAAKwJ,OACR,QAAUF,GAAqC,MAA3BO,OAAOhI,KAAK7B,KAAKwJ,OAClC,OAASF,GAAqC,KAA3BO,OAAOhI,KAAK7B,KAAKwJ,SACzCA,EAAO,IAAM3H,KAAK7B,KAAKwJ,MAGvB3H,KAAK7B,KAAKyJ,oBACVrL,EAAMyD,KAAK7B,KAAK0J,gBAAkBlC,KAGjC3F,KAAKkC,iBACN3F,EAAMwL,IAAM,GAEVE,IAAAA,EAAeC,EAAQ5C,OAAO/I,GAE5BkL,OAAAA,EACJ,QAF8C,IAArCzH,KAAK7B,KAAKgK,SAASjM,QAAQ,KAG5B,IAAM8D,KAAK7B,KAAKgK,SAAW,IAAMnI,KAAK7B,KAAKgK,UACnDR,EACA3H,KAAK7B,KAAKhB,MACT8K,EAAa3L,OAAS,IAAM2L,EAAe,MAAA,CAAA,IAAA,QAAA,MAQpD,WAAA,SACciD,IACJ,iBAAkBA,IAAalL,KAAKyM,OAASf,EAAGhM,UAAU+M,UAAAA,EA3K3Df,GCNTlF,QAAS+B,ICEAmE,GAAAA,SAAAA,GAAAA,EAAAA,EAAelN,GAAfkN,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAQG/P,GAAAA,IAAAA,EAAKwB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAO,GAAA,OAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,MAEhBxB,GAAO,WAAA,EAAoBA,KAC3BwB,EAAOxB,EACPA,EAAM,MAENA,GACAA,EAAMb,EAASa,GACfwB,EAAKgK,SAAWxL,EAAIG,KACpBqB,EAAKuJ,OAA0B,UAAjB/K,EAAI+L,UAAyC,QAAjB/L,EAAI+L,SAC9CvK,EAAKwJ,KAAOhL,EAAIgL,KACZhL,EAAIJ,QACJ4B,EAAK5B,MAAQI,EAAIJ,QAEhB4B,EAAKrB,OACVqB,EAAKgK,SAAWrM,EAASqC,EAAKrB,MAAMA,MAExCqC,EAAAA,EAAAA,GAA4BhB,GAAAA,EACvBuJ,OACD,MAAQvJ,EAAKuJ,OACPvJ,EAAKuJ,OACe,oBAAbc,UAA4B,WAAaA,SAASE,SAC/DvK,EAAKgK,WAAahK,EAAKwJ,OAEvBxJ,EAAKwJ,KAAOgF,EAAKjF,OAAS,MAAQ,MAAA,EAEjCS,SACDhK,EAAKgK,WACoB,oBAAbK,SAA2BA,SAASL,SAAW,aAAA,EAC1DR,KACDxJ,EAAKwJ,OACoB,oBAAba,UAA4BA,SAASb,KACvCa,SAASb,KACTgF,EAAKjF,OACD,MACA,MAAA,EACb8D,WAAarN,EAAKqN,YAAc,CAAC,UAAW,aAAA,EAC5ClH,WAAa,GAAA,EACbsI,YAAc,GAAA,EACdC,cAAgB,EAAA,EAChB1O,KAAO2O,EAAc,CACtB3P,KAAM,aACN4P,OAAAA,EACAnD,iBAAAA,EACAoD,SAAAA,EACAnF,eAAgB,IAChBoF,iBAAAA,EACAC,oBAAAA,EACAC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,GAClBC,qBAAAA,GACDnP,GAAAA,EACEA,KAAKhB,KAAOwP,EAAKxO,KAAKhB,KAAKd,QAAQ,MAAO,IAAM,IACtB,iBAApBsQ,EAAKxO,KAAK5B,QAAAA,EACZ4B,KAAK5B,MAAQ2L,EAAQpC,OAAO6G,EAAKxO,KAAK5B,QAAAA,EAG1CgR,GAAK,KAAA,EACLC,SAAW,KAAA,EACXC,aAAe,KAAA,EACfC,YAAc,KAAA,EAEdC,iBAAmB,KACQ,mBAArB/N,mBACH+M,EAAKxO,KAAKmP,qBAIV1N,iBAAiB,eAAgB,WACzB+M,EAAKiB,YAAAA,EAEAA,UAAUrN,qBAAAA,EACVqN,UAAUxG,WAAAA,GAIL,cAAlBuF,EAAKxE,WAAAA,EACA0F,qBAAuB,WAAA,EACnB/I,QAAQ,oBAEjBlF,iBAAiB,UAAW+M,EAAKkB,sBAAAA,KAAsB,EAG1DrE,OAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,kBAAAA,MAST,SAAgBiD,GACNlQ,IAAAA,EA0bd,SAAeW,GACL4Q,IAAAA,EAAI,GACL,IAAA,IAAIlR,KAAKM,EACNA,EAAI4B,eAAelC,KACnBkR,EAAElR,GAAKM,EAAIN,IAGZkR,OAAAA,EAPX,CA1b4B9N,KAAK7B,KAAK5B,OAE9BA,EAAMwR,IRjFU,EQmFhBxR,EAAMqR,UAAYnB,EAEdzM,KAAKuN,KACLhR,EAAMuL,IAAM9H,KAAKuN,IACfpP,IAAAA,EAAO2O,EAAc,GAAI9M,KAAK7B,KAAKkP,iBAAiBZ,GAAOzM,KAAK7B,KAAM,CACxE5B,MAAAA,EACAgI,OAAQvE,KACRmI,SAAUnI,KAAKmI,SACfT,OAAQ1H,KAAK0H,OACbC,KAAM3H,KAAK2H,OAER,OAAA,IAAI6D,GAAWiB,GAAMtO,KAAAA,CAAAA,IAAAA,OAAAA,MAOhC,WACQyP,IAAAA,EAAAA,EAAAA,KACA5N,GAAAA,KAAK7B,KAAK8O,iBACVP,EAAOsB,wBACmC,IAA1ChO,KAAKwL,WAAWtP,QAAQ,aACxB0R,EAAY,gBAEX,CAAI,GAAA,IAAM5N,KAAKwL,WAAWlP,OAAAA,YAAAA,KAEtB+C,aAAa,WACduH,EAAK5F,aAAa,QAAS,4BAC5B,GAIH4M,EAAY5N,KAAKwL,WAAW,GAE3BlH,KAAAA,WAAa,UAAA,IAGdsJ,EAAY5N,KAAKiO,gBAAgBL,GAErC,MAAOzR,GAAAA,OAAAA,KACEqP,WAAW0C,aAAAA,KACX1E,OAGToE,EAAUpE,OAAAA,KACL2E,aAAaP,KAAAA,CAAAA,IAAAA,eAAAA,MAOtB,SAAaA,GAAAA,IAAAA,EAAAA,KACAA,KAAAA,WAAAA,KACAA,UAAUrN,qBAAAA,KAGdqN,UAAYA,EAEjBA,EACKjO,GAAG,QAASK,KAAKoO,QAAQ9O,KAAKU,OAC9BL,GAAG,SAAUK,KAAKkF,SAAS5F,KAAKU,OAChCL,GAAG,QAASK,KAAKkJ,QAAQ5J,KAAKU,OAC9BL,GAAG,QAAS,WACbuH,EAAKpC,QAAQ,uBAAA,CAAA,IAAA,QAAA,MASrB,SAAM2H,GAAAA,IAAAA,EAAAA,KACEmB,EAAY5N,KAAKiO,gBAAgBxB,GACjC4B,GAAAA,EACJ3B,EAAOsB,uBAAAA,EACDM,IAAAA,EAAkB,WAChBD,IAEJT,EAAU1D,KAAK,CAAC,CAAExI,KAAM,OAAQlF,KAAM,WACtCoR,EAAU1N,KAAK,SAAU,SAAAsE,GAAAA,IACjB6J,EAAAA,GAEA,SAAW7J,EAAI9C,MAAQ,UAAY8C,EAAIhI,KAAM,CAC7C6K,GAAAA,EAAKkH,WAAAA,EACLlH,EAAKrG,aAAa,YAAa4M,IAC1BA,EACD,OACJlB,EAAOsB,sBAAwB,cAAgBJ,EAAUnB,KACzDpF,EAAKuG,UAAUjH,MAAM,WACb0H,GAEA,WAAahH,EAAK/C,aAEtBiG,IACAlD,EAAK8G,aAAaP,GAClBA,EAAU1D,KAAK,CAAC,CAAExI,KAAM,aACxB2F,EAAKrG,aAAa,UAAW4M,GAC7BA,EAAY,KACZvG,EAAKkH,WAAAA,EACLlH,EAAKmH,eAGR,CACKzQ,IAAAA,EAAM,IAAI2G,MAAM,eAEtB3G,EAAI6P,UAAYA,EAAUnB,KAC1BpF,EAAKrG,aAAa,eAAgBjD,QAIrC0Q,SAAAA,IACDJ,IAGJA,GAAAA,EACA9D,IACAqD,EAAUxG,QACVwG,EAAY,MAGVrB,IAAAA,EAAU,SAAAxO,GACN2Q,IAAAA,EAAQ,IAAIhK,MAAM,gBAAkB3G,GAE1C2Q,EAAMd,UAAYA,EAAUnB,KAC5BgC,IACApH,EAAKrG,aAAa,eAAgB0N,IAE7BC,SAAAA,IACLpC,EAAQ,oBAGHH,SAAAA,IACLG,EAAQ,iBAGHqC,SAAAA,EAAUC,GACXjB,GAAaiB,EAAGpC,OAASmB,EAAUnB,MACnCgC,IAIFlE,IAAAA,EAAU,WACZqD,EAAUtN,eAAe,OAAQgO,GACjCV,EAAUtN,eAAe,QAASiM,GAClCqB,EAAUtN,eAAe,QAASqO,GAClCtH,EAAKlH,IAAI,QAASiM,GAClB/E,EAAKlH,IAAI,YAAayO,IAE1BhB,EAAU1N,KAAK,OAAQoO,GACvBV,EAAU1N,KAAK,QAASqM,GACxBqB,EAAU1N,KAAK,QAASyO,GAAAA,KACnBzO,KAAK,QAASkM,GAAAA,KACdlM,KAAK,YAAa0O,GACvBhB,EAAUpE,SAAAA,CAAAA,IAAAA,SAAAA,MAOd,WAAA,GAAA,KACSlF,WAAa,OAClBoI,EAAOsB,sBAAwB,cAAgBhO,KAAK4N,UAAUnB,KAAAA,KACzDzL,aAAa,QAAA,KACbwN,QAGD,SAAWxO,KAAKsE,YAChBtE,KAAK7B,KAAK6O,SACVhN,KAAK4N,UAAUjH,MAAAA,IAAAA,IACX/J,EAAI,EACFwJ,EAAIpG,KAAKwN,SAASlR,OACjBM,EAAIwJ,EAAGxJ,IACLkS,KAAAA,MAAM9O,KAAKwN,SAAS5Q,MAAAA,CAAAA,IAAAA,WAAAA,MASrC,SAASqI,GACD,GAAA,YAAcjF,KAAKsE,YACnB,SAAWtE,KAAKsE,YAChB,YAActE,KAAKsE,WAAAA,OAAAA,KACdtD,aAAa,SAAUiE,GAAAA,KAEvBjE,aAAa,aACViE,EAAOvD,MACN,IAAA,OACIqN,KAAAA,YAAYC,KAAKC,MAAMhK,EAAOzI,OAAAA,MAElC,IAAA,OACI0S,KAAAA,mBAAAA,KACAC,WAAW,QAAA,KACXnO,aAAa,QAAA,KACbA,aAAa,QAAA,MAEjB,IAAA,QACKjD,IAAAA,EAAM,IAAI2G,MAAM,gBAEtB3G,EAAIqR,KAAOnK,EAAOzI,KAAAA,KACb0M,QAAQnL,GAAAA,MAEZ,IAAA,UACIiD,KAAAA,aAAa,OAAQiE,EAAOzI,MAAAA,KAC5BwE,aAAa,UAAWiE,EAAOzI,SAAAA,CAAAA,IAAAA,cAAAA,MAapD,SAAYA,GACHwE,KAAAA,aAAa,YAAaxE,GAAAA,KAC1B+Q,GAAK/Q,EAAKsL,IAAAA,KACV8F,UAAUrR,MAAMuL,IAAMtL,EAAKsL,IAAAA,KAC3B0F,SAAWxN,KAAKqP,eAAe7S,EAAKgR,UAAAA,KACpCC,aAAejR,EAAKiR,aAAAA,KACpBC,YAAclR,EAAKkR,YAAAA,KACnBvG,SAED,WAAanH,KAAKsE,YAAAA,KAEjB4K,qBAAAA,CAAAA,IAAAA,mBAAAA,MAOT,WAAA,IAAA,EAAA,KACS3P,KAAAA,eAAeS,KAAK2N,kBAAAA,KACpBA,iBAAmB3N,KAAKX,aAAa,WACtCkI,EAAKzC,QAAQ,iBACd9E,KAAKyN,aAAezN,KAAK0N,aACxB1N,KAAK7B,KAAK8N,WAAAA,KACL0B,iBAAiBxB,UAAAA,CAAAA,IAAAA,UAAAA,MAQ9B,WACSS,KAAAA,YAAYpP,OAAO,EAAGwC,KAAK6M,eAAAA,KAI3BA,cAAgB,EACjB,IAAM7M,KAAK4M,YAAYtQ,OAAAA,KAClB0E,aAAa,SAAA,KAGbwN,UAAAA,CAAAA,IAAAA,QAAAA,MAQb,WACqBxO,WAAAA,KAAKsE,YAClBtE,KAAK4N,UAAUvJ,WACdrE,KAAKuO,WACNvO,KAAK4M,YAAYtQ,SAAAA,KACZsR,UAAU1D,KAAKlK,KAAK4M,aAAAA,KAGpBC,cAAgB7M,KAAK4M,YAAYtQ,OAAAA,KACjC0E,aAAa,YAAA,CAAA,IAAA,QAAA,MAY1B,SAAMwD,EAAK8K,EAASxP,GAAAA,OAAAA,KACXqP,WAAW,UAAW3K,EAAK8K,EAASxP,GAClCE,OAAAA,CAAAA,IAAAA,OAAAA,MAEX,SAAKwE,EAAK8K,EAASxP,GAAAA,OAAAA,KACVqP,WAAW,UAAW3K,EAAK8K,EAASxP,GAClCE,OAAAA,CAAAA,IAAAA,aAAAA,MAWX,SAAW0B,EAAMlF,EAAM8S,EAASxP,GACxB,GAAA,mBAAsBtD,IACtBsD,EAAKtD,EACLA,OAAAA,GAEA,mBAAsB8S,IACtBxP,EAAKwP,EACLA,EAAU,MAEV,YAActP,KAAKsE,YAAc,WAAatE,KAAKsE,WAAAA,EAGvDgL,EAAUA,GAAW,IACbC,UAAAA,IAAqBD,EAAQC,SAC/BtK,IAAAA,EAAS,CACXvD,KAAMA,EACNlF,KAAMA,EACN8S,QAASA,GAERtO,KAAAA,aAAa,eAAgBiE,GAAAA,KAC7B2H,YAAY3M,KAAKgF,GAClBnF,GACAE,KAAKE,KAAK,QAASJ,GAAAA,KAClB0O,WAAAA,CAAAA,IAAAA,QAAAA,MAOT,WAAA,IAAA,EAAA,KACUpH,EAAQ,WACVoI,EAAK1K,QAAQ,gBACb0K,EAAK5B,UAAUxG,SAEbqI,EAAkB,SAAlBA,IACFD,EAAKrP,IAAI,UAAWsP,GACpBD,EAAKrP,IAAI,eAAgBsP,GACzBrI,KAEEsI,EAAiB,WAEnBF,EAAKtP,KAAK,UAAWuP,GACrBD,EAAKtP,KAAK,eAAgBuP,IAE1B,MAAA,YAAczP,KAAKsE,YAAc,SAAWtE,KAAKsE,aAAAA,KAC5CA,WAAa,UACdtE,KAAK4M,YAAYtQ,OAAAA,KACZ4D,KAAK,QAAS,WACXsP,EAAKjB,UACLmB,IAGAtI,MAIHpH,KAAKuO,UACVmB,IAGAtI,KAGDpH,OAAAA,CAAAA,IAAAA,UAAAA,MAOX,SAAQjC,GACJ2O,EAAOsB,uBAAAA,EAAwB,KAC1BhN,aAAa,QAASjD,GAAAA,KACtB+G,QAAQ,kBAAmB/G,KAAAA,CAAAA,IAAAA,UAAAA,MAOpC,SAAQ4R,EAAQlL,GACMzE,YAAAA,KAAKsE,YACnB,SAAWtE,KAAKsE,YAChB,YAActE,KAAKsE,aAAAA,KAEd/E,eAAeS,KAAK2N,kBAAAA,KAEpBC,UAAUrN,mBAAmB,SAAA,KAE7BqN,UAAUxG,QAAAA,KAEVwG,UAAUrN,qBACoB,mBAAxBC,qBACPA,oBAAoB,UAAWR,KAAK6N,sBAAAA,GAAsB,KAGzDvJ,WAAa,SAAA,KAEbiJ,GAAK,KAAA,KAELvM,aAAa,QAAS2O,EAAQlL,GAAAA,KAG9BmI,YAAc,GAAA,KACdC,cAAgB,KAAA,CAAA,IAAA,iBAAA,MAU7B,SAAeW,GAAAA,IAAAA,IACLoC,EAAmB,GACrBhT,EAAI,EACFiT,EAAIrC,EAASlR,OACZM,EAAIiT,EAAGjT,KACLoD,KAAKwL,WAAWtP,QAAQsR,EAAS5Q,KAClCgT,EAAiB3P,KAAKuN,EAAS5Q,IAEhCgT,OAAAA,MAAAA,EA7hBFlD,GAAelN,GAgiBrBkJ,SRxgBiB,EAAA,IAAA,GAAA,GAAA,GAAA,GS5BfoH,SAAAA,GAAUC,EAAMC,EAAQjU,GAAAA,IAAAA,IAC3BkU,EAAI,EACCrT,EAAI,EAAGwJ,EAAIrK,EAAIO,OAAQM,EAAIwJ,EAAGxJ,KACrCqT,EAAIlU,EAAIgH,WAAWnG,IACX,IACNmT,EAAKG,SAASF,IAAUC,GAEjBA,EAAI,MACXF,EAAKG,SAASF,IAAU,IAAQC,GAAK,GACrCF,EAAKG,SAASF,IAAU,IAAY,GAAJC,IAEzBA,EAAI,OAAUA,GAAK,OAC1BF,EAAKG,SAASF,IAAU,IAAQC,GAAK,IACrCF,EAAKG,SAASF,IAAU,IAAQC,GAAK,EAAK,IAC1CF,EAAKG,SAASF,IAAU,IAAY,GAAJC,KAGhCrT,IACAqT,EAAI,QAAiB,KAAJA,IAAc,GAA2B,KAApBlU,EAAIgH,WAAWnG,IACrDmT,EAAKG,SAASF,IAAU,IAAQC,GAAK,IACrCF,EAAKG,SAASF,IAAU,IAAQC,GAAK,GAAM,IAC3CF,EAAKG,SAASF,IAAU,IAAQC,GAAK,EAAK,IAC1CF,EAAKG,SAASF,IAAU,IAAY,GAAJC,IA0B7BE,SAAAA,GAAQnM,EAAOoM,EAAQC,GAC1B3O,IAAAA,EAAAA,EAAc2O,GAAOzT,EAAI,EAAGwJ,EAAI,EAAGkK,EAAK,EAAGC,EAAK,EAAGjU,EAAS,EAAGkU,EAAO,EAE7D,GAAA,WAAT9O,EAAmB,CACrBpF,IAAAA,EAzBJ,SAAoBP,GAAAA,IAAAA,IACdkU,EAAI,EAAG3T,EAAS,EACXM,EAAI,EAAGwJ,EAAIrK,EAAIO,OAAQM,EAAIwJ,EAAGxJ,KACrCqT,EAAIlU,EAAIgH,WAAWnG,IACX,IACNN,GAAU,EAEH2T,EAAI,KACX3T,GAAU,EAEH2T,EAAI,OAAUA,GAAK,MAC1B3T,GAAU,GAGVM,IACAN,GAAU,GAGPA,OAAAA,EAlBT,CAyBwB+T,IAGP,GACXrM,EAAM/D,KAAc,IAAT3D,GACXkU,EAAO,OAGJ,GAAIlU,EAAS,IAChB0H,EAAM/D,KAAK,IAAM3D,GACjBkU,EAAO,OAGJ,GAAIlU,EAAS,MAChB0H,EAAM/D,KAAK,IAAM3D,GAAU,EAAGA,GAC9BkU,EAAO,MAGJ,CAAA,KAAIlU,EAAS,YAAA,MAIV,IAAIoI,MAAM,mBAHhBV,EAAM/D,KAAK,IAAM3D,GAAU,GAAIA,GAAU,GAAIA,GAAU,EAAGA,GAC1DkU,EAAO,EAITJ,OAAAA,EAAOnQ,KAAK,CAAEwQ,KAAMJ,EAAOK,QAASpU,EAAQqU,QAAS3M,EAAM1H,SACpDkU,EAAOlU,EAEH,GAAA,WAAToF,EAAAA,OAIE+D,KAAKC,MAAM2K,KAAWA,GAAUO,SAASP,GAMzCA,GAAS,EAEPA,EAAQ,KACVrM,EAAM/D,KAAKoQ,GACJ,GAGLA,EAAQ,KACVrM,EAAM/D,KAAK,IAAMoQ,GACV,GAGLA,EAAQ,OACVrM,EAAM/D,KAAK,IAAMoQ,GAAS,EAAGA,GACtB,GAGLA,EAAQ,YACVrM,EAAM/D,KAAK,IAAMoQ,GAAS,GAAIA,GAAS,GAAIA,GAAS,EAAGA,GAChD,IAGTC,EAAMD,EAAQ5K,KAAKoL,IAAI,EAAG,KAAQ,EAClCN,EAAKF,IAAU,EACfrM,EAAM/D,KAAK,IAAMqQ,GAAM,GAAIA,GAAM,GAAIA,GAAM,EAAGA,EAAIC,GAAM,GAAIA,GAAM,GAAIA,GAAM,EAAGA,GACxE,GAGHF,IAAU,IACZrM,EAAM/D,KAAKoQ,GACJ,GAGLA,IAAU,KACZrM,EAAM/D,KAAK,IAAMoQ,GACV,GAGLA,IAAU,OACZrM,EAAM/D,KAAK,IAAMoQ,GAAS,EAAGA,GACtB,GAGLA,IAAU,YACZrM,EAAM/D,KAAK,IAAMoQ,GAAS,GAAIA,GAAS,GAAIA,GAAS,EAAGA,GAChD,IAGTC,EAAK7K,KAAKC,MAAM2K,EAAQ5K,KAAKoL,IAAI,EAAG,KACpCN,EAAKF,IAAU,EACfrM,EAAM/D,KAAK,IAAMqQ,GAAM,GAAIA,GAAM,GAAIA,GAAM,EAAGA,EAAIC,GAAM,GAAIA,GAAM,GAAIA,GAAM,EAAGA,GACxE,IAxDPvM,EAAM/D,KAAK,KACXmQ,EAAOnQ,KAAK,CAAE6Q,OAAQT,EAAOK,QAAS,EAAGC,QAAS3M,EAAM1H,SACjD,GAyDE,GAAA,WAAToF,EAAmB,CAEP,GAAA,OAAV2O,EAAAA,OACFrM,EAAM/D,KAAK,KACJ,EAGLY,GAAAA,MAAMkQ,QAAQV,GAAQ,CAAA,IACxB/T,EAAS+T,EAAM/T,QAGF,GACX0H,EAAM/D,KAAc,IAAT3D,GACXkU,EAAO,OAGJ,GAAIlU,EAAS,MAChB0H,EAAM/D,KAAK,IAAM3D,GAAU,EAAGA,GAC9BkU,EAAO,MAGJ,CAAA,KAAIlU,EAAS,YAAA,MAIV,IAAIoI,MAAM,mBAHhBV,EAAM/D,KAAK,IAAM3D,GAAU,GAAIA,GAAU,GAAIA,GAAU,EAAGA,GAC1DkU,EAAO,EAIJ5T,IAAAA,EAAI,EAAGA,EAAIN,EAAQM,IACtB4T,GAAQL,GAAQnM,EAAOoM,EAAQC,EAAMzT,IAEhC4T,OAAAA,EAILH,GAAAA,aAAiBxK,KAAM,CACrBmL,IAAAA,EAAOX,EAAMY,UACjBX,OAAAA,EAAK7K,KAAKC,MAAMsL,EAAOvL,KAAKoL,IAAI,EAAG,KACnCN,EAAKS,IAAS,EACdhN,EAAM/D,KAAK,IAAM,EAAGqQ,GAAM,GAAIA,GAAM,GAAIA,GAAM,EAAGA,EAAIC,GAAM,GAAIA,GAAM,GAAIA,GAAM,EAAGA,GAC3E,GAGLF,GAAAA,aAAiBrO,YAAa,CAAA,IAChC1F,EAAS+T,EAAMa,YAGF,IACXlN,EAAM/D,KAAK,IAAM3D,GACjBkU,EAAO,OAAA,GAGLlU,EAAS,MACX0H,EAAM/D,KAAK,IAAM3D,GAAU,EAAGA,GAC9BkU,EAAO,MAAA,CAAA,KAGLlU,EAAS,YAAA,MAIL,IAAIoI,MAAM,oBAHhBV,EAAM/D,KAAK,IAAM3D,GAAU,GAAIA,GAAU,GAAIA,GAAU,EAAGA,GAC1DkU,EAAO,EAITJ,OAAAA,EAAOnQ,KAAK,CAAEkR,KAAMd,EAAOK,QAASpU,EAAQqU,QAAS3M,EAAM1H,SACpDkU,EAAOlU,EAGY,GAAA,mBAAjB+T,EAAMe,OAAAA,OACRjB,GAAQnM,EAAOoM,EAAQC,EAAMe,UAGlC7P,IAAAA,EAAO,GAAI9B,EAAM,GAEjB4R,EAAUjQ,OAAOG,KAAK8O,GACrBzT,IAAAA,EAAI,EAAGwJ,EAAIiL,EAAQ/U,OAAQM,EAAIwJ,EAAGxJ,IAEX,mBAAfyT,EADX5Q,EAAM4R,EAAQzU,KAEZ2E,EAAKtB,KAAKR,GAAAA,IAGdnD,EAASiF,EAAKjF,QAGD,GACX0H,EAAM/D,KAAc,IAAT3D,GACXkU,EAAO,OAGJ,GAAIlU,EAAS,MAChB0H,EAAM/D,KAAK,IAAM3D,GAAU,EAAGA,GAC9BkU,EAAO,MAGJ,CAAA,KAAIlU,EAAS,YAAA,MAIV,IAAIoI,MAAM,oBAHhBV,EAAM/D,KAAK,IAAM3D,GAAU,GAAIA,GAAU,GAAIA,GAAU,EAAGA,GAC1DkU,EAAO,EAKJ5T,IAAAA,EAAI,EAAGA,EAAIN,EAAQM,IAEtB4T,GAAQL,GAAQnM,EAAOoM,EADvB3Q,EAAM8B,EAAK3E,IAEX4T,GAAQL,GAAQnM,EAAOoM,EAAQC,EAAM5Q,IAEhC+Q,OAAAA,EAGI,GAAA,YAAT9O,EAAAA,OACFsC,EAAM/D,KAAKoQ,EAAQ,IAAO,KACnB,EAGI,GAAA,cAAT3O,EAAAA,OACFsC,EAAM/D,KAAK,IAAM,EAAG,GACb,EAEH,MAAA,IAAIyE,MAAM,oBCnQT4M,SAAAA,GAAQhP,GAAAA,GAAAA,KACVqO,QAAU,EACXrO,aAAkBN,YAAAA,KACfuP,QAAUjP,EAAAA,KACVkP,MAAQ,IAAIC,SAASzR,KAAKuR,aAC1B,CAAA,IAAIvP,YAAYK,OAAOC,GAAAA,MAItB,IAAIoC,MAAM,oBAHX6M,KAAAA,QAAUjP,EAAOA,OAAAA,KACjBkP,MAAQ,IAAIC,SAASzR,KAAKuR,QAASjP,EAAOoP,WAAYpP,EAAO4O,aAAAA,GA+C9DxR,UAAUiS,OAAS,SAAUrV,GAAAA,IAAAA,IAC/B+T,EAAQ,IAAIxP,MAAMvE,GACbM,EAAI,EAAGA,EAAIN,EAAQM,IAC1ByT,EAAMzT,GAAKoD,KAAK4R,SAEXvB,OAAAA,GAAAA,GAGD3Q,UAAUmS,KAAO,SAAUvV,GAAAA,IAAAA,IACnB+T,EAAQ,GACbzT,EAAI,EAAGA,EAAIN,EAAQM,IAE1ByT,EADMrQ,KAAK4R,UACE5R,KAAK4R,SAEbvB,OAAAA,GAAAA,GAGD3Q,UAAU+Q,KAAO,SAAUnU,GAC7B+T,IAAAA,EA3DN,SAAkBN,EAAMC,EAAQ1T,GAAAA,IAAAA,IAC1BwV,EAAS,GAAIC,EAAM,EACdnV,EAAIoT,EAAQgC,EAAMhC,EAAS1T,EAAQM,EAAIoV,EAAKpV,IAAK,CACpDqV,IAAAA,EAAOlC,EAAKmC,SAAStV,GACH,GAAA,IAAV,IAAPqV,GAIiB,GAAA,MAAV,IAAPA,GAOiB,GAAA,MAAV,IAAPA,GAAAA,CAQiB,GAAA,MAAV,IAAPA,GAAAA,MAaC,IAAIvN,MAAM,gBAAkBuN,EAAKpQ,SAAS,MAZ9CkQ,GAAe,EAAPE,IAAgB,IACC,GAArBlC,EAAKmC,WAAWtV,KAAc,IACT,GAArBmT,EAAKmC,WAAWtV,KAAc,GACT,GAArBmT,EAAKmC,WAAWtV,KAAc,IACvB,OACTmV,GAAO,MACPD,GAAU5N,OAAOC,aAA4B,OAAd4N,IAAQ,IAA8B,OAAT,KAANA,KAEtDD,GAAU5N,OAAOC,aAAa4N,QAhBhCD,GAAU5N,OAAOC,cACN,GAAP8N,IAAgB,IACK,GAArBlC,EAAKmC,WAAWtV,KAAc,GACT,GAArBmT,EAAKmC,WAAWtV,KAAc,QAVlCkV,GAAU5N,OAAOC,cACN,GAAP8N,IAAgB,EACI,GAArBlC,EAAKmC,WAAWtV,SANnBkV,GAAU5N,OAAOC,aAAa8N,GAiC3BH,OAAAA,EAtCT,CA2DuB9R,KAAKwR,MAAOxR,KAAK2Q,QAASrU,GAAAA,OAAAA,KAC1CqU,SAAWrU,EACT+T,GAAAA,GAGD3Q,UAAUyR,KAAO,SAAU7U,GAC7B+T,IAAAA,EAAQrQ,KAAKuR,QAAQxQ,MAAMf,KAAK2Q,QAAS3Q,KAAK2Q,QAAUrU,GAAAA,OAAAA,KACvDqU,SAAWrU,EACT+T,GAAAA,GAGD3Q,UAAUkS,OAAS,WAErBvB,IAAAA,EADA8B,EAASnS,KAAKwR,MAAMU,SAASlS,KAAK2Q,WAC3BrU,EAAS,EAAGoF,EAAO,EAAG4O,EAAK,EAAGC,EAAK,EAE1C4B,GAAAA,EAAS,IAAA,OAEPA,EAAS,IACJA,EAGLA,EAAS,IACJnS,KAAK6R,KAAc,GAATM,GAGfA,EAAS,IACJnS,KAAK2R,OAAgB,GAATQ,GAGdnS,KAAKyQ,KAAc,GAAT0B,GAIfA,GAAAA,EAAS,IAAA,OACmB,GAAtB,IAAOA,EAAS,GAGlBA,OAAAA,GAED,KAAA,IACI,OAAA,KAEJ,KAAA,IAAA,OAAA,EAGA,KAAA,IAAA,OAAA,EAIA,KAAA,IACH7V,OAAAA,EAAS0D,KAAKwR,MAAMU,SAASlS,KAAK2Q,SAAAA,KAC7BA,SAAW,EACT3Q,KAAKmR,KAAK7U,GACd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMY,UAAUpS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAKmR,KAAK7U,GACd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAKmR,KAAK7U,GAGd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMU,SAASlS,KAAK2Q,SAClCjP,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,QAAU,GAAA,KACpCA,SAAW,EACT,CAACjP,EAAM1B,KAAKmR,KAAK7U,IACrB,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMY,UAAUpS,KAAK2Q,SACnCjP,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,QAAU,GAAA,KACpCA,SAAW,EACT,CAACjP,EAAM1B,KAAKmR,KAAK7U,IACrB,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SACnCjP,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,QAAU,GAAA,KACpCA,SAAW,EACT,CAACjP,EAAM1B,KAAKmR,KAAK7U,IAGrB,KAAA,IACH+T,OAAAA,EAAQrQ,KAAKwR,MAAMe,WAAWvS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACTN,EACJ,KAAA,IACHA,OAAAA,EAAQrQ,KAAKwR,MAAMgB,WAAWxS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACTN,EAGJ,KAAA,IACHA,OAAAA,EAAQrQ,KAAKwR,MAAMU,SAASlS,KAAK2Q,SAAAA,KAC5BA,SAAW,EACTN,EACJ,KAAA,IACHA,OAAAA,EAAQrQ,KAAKwR,MAAMY,UAAUpS,KAAK2Q,SAAAA,KAC7BA,SAAW,EACTN,EACJ,KAAA,IACHA,OAAAA,EAAQrQ,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SAAAA,KAC7BA,SAAW,EACTN,EACJ,KAAA,IACHC,OAAAA,EAAKtQ,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SAAWlL,KAAKoL,IAAI,EAAG,IACtDN,EAAKvQ,KAAKwR,MAAMa,UAAUrS,KAAK2Q,QAAU,GAAA,KACpCA,SAAW,EACTL,EAAKC,EAGT,KAAA,IACHF,OAAAA,EAAQrQ,KAAKwR,MAAMc,QAAQtS,KAAK2Q,SAAAA,KAC3BA,SAAW,EACTN,EACJ,KAAA,IACHA,OAAAA,EAAQrQ,KAAKwR,MAAMiB,SAASzS,KAAK2Q,SAAAA,KAC5BA,SAAW,EACTN,EACJ,KAAA,IACHA,OAAAA,EAAQrQ,KAAKwR,MAAMkB,SAAS1S,KAAK2Q,SAAAA,KAC5BA,SAAW,EACTN,EACJ,KAAA,IACHC,OAAAA,EAAKtQ,KAAKwR,MAAMkB,SAAS1S,KAAK2Q,SAAWlL,KAAKoL,IAAI,EAAG,IACrDN,EAAKvQ,KAAKwR,MAAMa,UAAUrS,KAAK2Q,QAAU,GAAA,KACpCA,SAAW,EACTL,EAAKC,EAGT,KAAA,IACH7O,OAAAA,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,SAAAA,KAC1BA,SAAW,EACH,IAATjP,OAAAA,KACGiP,SAAW,GAGX,CAACjP,EAAM1B,KAAKmR,KAAK,IACrB,KAAA,IACHzP,OAAAA,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,SAAAA,KAC1BA,SAAW,EACT,CAACjP,EAAM1B,KAAKmR,KAAK,IACrB,KAAA,IACHzP,OAAAA,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,SAAAA,KAC1BA,SAAW,EACT,CAACjP,EAAM1B,KAAKmR,KAAK,IACrB,KAAA,IACHzP,OAAAA,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,SAAAA,KAC1BA,SAAW,EACH,IAATjP,GACF4O,EAAKtQ,KAAKwR,MAAMkB,SAAS1S,KAAK2Q,SAAWlL,KAAKoL,IAAI,EAAG,IACrDN,EAAKvQ,KAAKwR,MAAMa,UAAUrS,KAAK2Q,QAAU,GAAA,KACpCA,SAAW,EACT,IAAI9K,KAAKyK,EAAKC,IAEhB,CAAC7O,EAAM1B,KAAKmR,KAAK,IACrB,KAAA,IACHzP,OAAAA,EAAO1B,KAAKwR,MAAMc,QAAQtS,KAAK2Q,SAAAA,KAC1BA,SAAW,EACT,CAACjP,EAAM1B,KAAKmR,KAAK,KAGrB,KAAA,IACH7U,OAAAA,EAAS0D,KAAKwR,MAAMU,SAASlS,KAAK2Q,SAAAA,KAC7BA,SAAW,EACT3Q,KAAKyQ,KAAKnU,GACd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMY,UAAUpS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAKyQ,KAAKnU,GACd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAKyQ,KAAKnU,GAGd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMY,UAAUpS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAK2R,OAAOrV,GAChB,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAK2R,OAAOrV,GAGhB,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMY,UAAUpS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAK6R,KAAKvV,GACd,KAAA,IACHA,OAAAA,EAAS0D,KAAKwR,MAAMa,UAAUrS,KAAK2Q,SAAAA,KAC9BA,SAAW,EACT3Q,KAAK6R,KAAKvV,GAGf,MAAA,IAAIoI,MAAM,oBAST2L,GAAAA,ODbT,SAAgBA,GACVrM,IAAAA,EAAQ,GACRoM,EAAS,GACTI,EAAOL,GAAQnM,EAAOoM,EAAQC,GAC9BsC,EAAM,IAAI3Q,YAAYwO,GACtBT,EAAO,IAAI0B,SAASkB,GAEpBC,EAAa,EACbC,EAAe,EACfC,GAAc,EACd1C,EAAO9T,OAAS,IAClBwW,EAAa1C,EAAO,GAAGO,SAAAA,IAAAA,IAGrBoC,EAAOC,EAAc,EAAGhD,EAAS,EAC5BpT,EAAI,EAAGwJ,EAAIpC,EAAM1H,OAAQM,EAAIwJ,EAAGxJ,IACvCmT,GAAAA,EAAKG,SAAS2C,EAAejW,EAAGoH,EAAMpH,IAClCA,EAAI,IAAMkW,EAAAA,CAEdE,GAAAA,GADAD,EAAQ3C,EAAOwC,IACKlC,QACpBV,EAAS6C,EAAeC,EACpBC,EAAM5B,KAAAA,IAAAA,IACJ8B,EAAM,IAAInQ,WAAWiQ,EAAM5B,MACtBtB,EAAI,EAAGA,EAAImD,EAAanD,IAC/BE,EAAKG,SAASF,EAASH,EAAGoD,EAAIpD,SAEvBkD,EAAMtC,KACfX,GAAUC,EAAMC,EAAQ+C,EAAMtC,WAAAA,IACrBsC,EAAMjC,QACff,EAAKmD,WAAWlD,EAAQ+C,EAAMjC,QAGhC+B,GAAgBG,EACZ5C,IAFJwC,KAGEE,EAAa1C,EAAOwC,GAAYjC,SAG7BgC,OAAAA,GE7SQQ,GAAAA,OD+QjB,SAAgB7Q,GACV8Q,IAAAA,EAAU,IAAI9B,GAAQhP,GACtB+N,EAAQ+C,EAAQxB,SAChBwB,GAAAA,EAAQzC,UAAYrO,EAAO4O,WAAAA,MACvB,IAAIxM,MAAOpC,EAAO4O,WAAakC,EAAQzC,QAAW,mBAEnDN,OAAAA,GCpRQgD,IAAAA,GAAAA,GAAAA,CAAAA,QAAAA,KAAAA,SAAAA,GCcR7T,SAAAA,EAAQtC,GACXA,GAAAA,EAAK,OAAA,SAWIA,GACR,IAAA,IAAIuC,KAAOD,EAAQE,UACtBxC,EAAIuC,GAAOD,EAAQE,UAAUD,GAExBvC,OAAAA,EAfE,CAAaA,GA6JUZ,GAvKhCgX,QAAiB9T,EAqCnBA,EAAQE,UAAUC,GAClBH,EAAQE,UAAUE,iBAAmB,SAASC,EAAOC,GAAAA,OAAAA,KAC9CC,WAAaC,KAAKD,YAAc,IACpCC,KAAKD,WAAW,IAAMF,GAASG,KAAKD,WAAW,IAAMF,IAAU,IAC7DI,KAAKH,GACDE,MAaTR,EAAQE,UAAUQ,KAAO,SAASL,EAAOC,GAC9BH,SAAAA,IACFQ,KAAAA,IAAIN,EAAOF,GAChBG,EAAGM,MAAMJ,KAAMK,WAGjBV,OAAAA,EAAGG,GAAKA,EAAAA,KACHH,GAAGE,EAAOF,GACRK,MAaTR,EAAQE,UAAUS,IAClBX,EAAQE,UAAUY,eAClBd,EAAQE,UAAUa,mBAClBf,EAAQE,UAAUc,oBAAsB,SAASX,EAAOC,GAAAA,GAAAA,KACjDC,WAAaC,KAAKD,YAAc,GAGjC,GAAKM,UAAU/D,OAAAA,OAAAA,KACZyD,WAAa,GACXC,KAcLS,IAAAA,EAVAC,EAAYV,KAAKD,WAAW,IAAMF,GAAAA,IACjCa,EAAW,OAAOV,KAGnB,GAAA,GAAKK,UAAU/D,OAAAA,cACV0D,KAAKD,WAAW,IAAMF,GACtBG,KAKJ,IAAA,IAAIpD,EAAI,EAAGA,EAAI8D,EAAUpE,OAAQM,IAAAA,IACpC6D,EAAKC,EAAU9D,MACJkD,GAAMW,EAAGX,KAAOA,EAAI,CAC7BY,EAAUlD,OAAOZ,EAAG,GAAA,MAOC,OAAA,IAArB8D,EAAUpE,eACL0D,KAAKD,WAAW,IAAMF,GAGxBG,MAWTR,EAAQE,UAAUiB,KAAO,SAASd,GAC3BE,KAAAA,WAAaC,KAAKD,YAAc,GAAA,IAAA,IAEjCa,EAAO,IAAIC,MAAMR,UAAU/D,OAAS,GACpCoE,EAAYV,KAAKD,WAAW,IAAMF,GAE7BjD,EAAI,EAAGA,EAAIyD,UAAU/D,OAAQM,IACpCgE,EAAKhE,EAAI,GAAKyD,UAAUzD,GAGtB8D,GAAAA,EAEG,CAAI9D,EAAI,EAAR,IAAA,IAAWkE,GADhBJ,EAAYA,EAAUK,MAAM,IACIzE,OAAQM,EAAIkE,IAAOlE,EACjD8D,EAAU9D,GAAGwD,MAAMJ,KAAMY,GAItBZ,OAAAA,MAWTR,EAAQE,UAAUuB,UAAY,SAASpB,GAAAA,OAAAA,KAChCE,WAAaC,KAAKD,YAAc,GAC9BC,KAAKD,WAAW,IAAMF,IAAU,IAWzCL,EAAQE,UAAUwB,aAAe,SAASrB,GAAAA,QAC9BG,KAAKiB,UAAUpB,GAAOvD,QD5KjB+W,GEDbE,IAAAA,GAAUJ,GACV3T,GAAU6T,GAAAA,QAAAA,GAAAA,GAAAA,SAEK,EAMfG,GAAcC,GAAAA,GAAAA,WAAqB,CACrCC,QAAS,EACTC,WAAY,EACZC,MAAO,EACPC,IAAK,EACLC,cAAe,GAGbC,GACF/L,OAAO+L,WACP,SAAU1D,GAEW,MAAA,iBAAVA,GACPO,SAASP,IACT5K,KAAKC,MAAM2K,KAAWA,GAIxB2D,GAAW,SAAU3D,GACC,MAAA,iBAAVA,GAGZ4D,GAAW,SAAU5D,GAC0B,MAAA,oBAA1CjP,OAAO1B,UAAUmC,SAASC,KAAKuO,IAG/B6D,SAAAA,MAMA5C,SAAAA,MAJT4C,GAAQxU,UAAU4F,OAAS,SAAUL,GAC5B,MAAA,CAACsO,GAAQjO,OAAOL,KAKzBzF,GAAQ8R,GAAQ5R,WAEhB4R,GAAQ5R,UAAUyU,IAAM,SAAUjX,GAC5BqG,IAAAA,EAAUgQ,GAAQzN,OAAO5I,GACxBkX,KAAAA,YAAY7Q,GAAAA,KACZ5C,KAAK,UAAW4C,IAgBvB+N,GAAQ5R,UAAU0U,YAAc,SAAU7Q,GAAAA,KAEtCwQ,GAAUxQ,EAAQ7B,OAClB6B,EAAQ7B,MAAQ8R,GAAWE,SAC3BnQ,EAAQ7B,MAAQ8R,GAAWM,eAAAA,MAErB,IAAIpP,MAAM,uBAAA,IAGbsP,GAASzQ,EAAQ8Q,KAAAA,MACd,IAAI3P,MAAM,qBAAA,IAvBpB,SAAqBnB,GACXA,OAAAA,EAAQ7B,MACT8R,KAAAA,GAAWE,QAAAA,YAAAA,IACPnQ,EAAQ/G,MAAsByX,GAAS1Q,EAAQ/G,MACnDgX,KAAAA,GAAWG,WAAAA,YAAAA,IACPpQ,EAAQ/G,KACZgX,KAAAA,GAAWM,cACPE,OAAAA,GAASzQ,EAAQ/G,OAASyX,GAAS1Q,EAAQ/G,MAAAA,QAE3CqE,OAAAA,MAAMkQ,QAAQxN,EAAQ/G,OATnC,CA0BmB+G,GAAAA,MACT,IAAImB,MAAM,mBAAA,QAAA,IAGDnB,EAAQgK,KAAoBwG,GAAUxQ,EAAQgK,IAAAA,MAEvD,IAAI7I,MAAM,sBAIpB4M,GAAQ5R,UAAU4U,QAAU,aAE5B,IAAA,GAAA,GAAA,QAAkBJ,GAAAA,GAAAA,GAAAA,QACA5C,GAAAA,GAAAA,OAAAA,OzB/CL3V,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,QAAAA,SAAAA,GAAAA,OAAAA,KAAAA,GAAAA,QAAAA,SAAAA,GAAAA,GAAAA,YAAAA,KAAAA,KAAAA,GAAAA,CAAAA,IAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,CAAAA,YAAAA,EAAAA,IAAAA,WAAAA,OAAAA,EAAAA,WAAAA,OAAAA,OAAAA,GyB+CK2V,CAAAA,CAAAA,UAAAA,KAAAA,QAAAA,GAAAA,SAAAA,GAAAA,iBAAAA,OAAAA,IAAAA,QAAAA,GAAAA,QAAAA,IAAAA,CAAAA,MC1FF3R,SAAAA,GAAGzC,EAAKoP,EAAIxM,GACxB5C,OAAAA,EAAIyC,GAAG2M,EAAIxM,GACJ,WACH5C,EAAIiD,IAAImM,EAAIxM,ICIdyU,IAAAA,GAAkBnT,OAAOoT,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbvU,eAAgB,IAEPoM,GAAAA,SAAAA,GAAAA,EAAAA,EAAelN,GAAfkN,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAMGoI,EAAIT,EAAKlW,GAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,KAAAA,OAEZ4W,WAAAA,EAAY,EACZC,cAAAA,EAAe,EACfC,cAAgB,GAAA,EAChBC,WAAa,GAAA,EACbC,IAAM,EAAA,EACNC,KAAO,GAAA,EACPC,MAAQ,GAAA,EACRP,GAAKA,EAAAA,EACLT,IAAMA,EACPlW,GAAQA,EAAKmX,OAAAA,EACRA,KAAOnX,EAAKmX,MAEjB3I,EAAKmI,GAAGS,cACR5I,EAAKnD,OAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,YAAAA,MAOb,WAAA,IACQxJ,KAAKwV,KAAAA,CAEHV,IAAAA,EAAK9U,KAAK8U,GACXU,KAAAA,KAAO,CACR7V,GAAGmV,EAAI,OAAQ9U,KAAKgM,OAAO1M,KAAKU,OAChCL,GAAGmV,EAAI,SAAU9U,KAAKyV,SAASnW,KAAKU,OACpCL,GAAGmV,EAAI,QAAS9U,KAAKuM,QAAQjN,KAAKU,OAClCL,GAAGmV,EAAI,QAAS9U,KAAKoM,QAAQ9M,KAAKU,WAAAA,CAAAA,IAAAA,SAAAA,IAM1C,WAAA,QACaA,KAAKwV,OAAAA,CAAAA,IAAAA,UAAAA,MAOlB,WACQxV,OAAAA,KAAK+U,YAAAA,KAEJW,YACA1V,KAAK8U,GAAL,eACD9U,KAAK8U,GAAGtL,OACR,SAAWxJ,KAAK8U,GAAGa,aACnB3V,KAAKgM,UALEhM,OAAAA,CAAAA,IAAAA,OAAAA,MAWf,WACWA,OAAAA,KAAKyU,YAAAA,CAAAA,IAAAA,OAAAA,MAQhB,WAAA,IAAA,IAAA,EAAA,UAAA,OAAQ7T,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACJA,OAAAA,EAAKgV,QAAQ,WAAA,KACRjV,KAAKP,MAAMJ,KAAMY,GACfZ,OAAAA,CAAAA,IAAAA,OAAAA,MASX,SAAKsM,GACGiI,GAAAA,GAAgBzV,eAAewN,GAAAA,MACzB,IAAI5H,MAAM,IAAM4H,EAAK,8BAAA,IAAA,IAAA,EAAA,UAAA,OAFvB1L,EAAAA,IAAAA,MAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,UAAAA,GAIRA,EAAKgV,QAAQtJ,GACPrH,IAAAA,EAAS,CACXvD,KAAM8R,GAAWI,MACjBpX,KAAMoE,EAEVqE,QAAiB,IACjBA,GAAAA,EAAOqK,QAAQC,UAAAA,IAAWvP,KAAKqV,MAAM9F,SAEjC,mBAAsB3O,EAAKA,EAAKtE,OAAS,GAAI,CACvCiR,IAAAA,EAAKvN,KAAKmV,MACVU,EAAMjV,EAAKkV,MACZC,KAAAA,qBAAqBxI,EAAIsI,GAC9B5Q,EAAOsI,GAAKA,EAEVyI,IAAAA,EAAsBhW,KAAK8U,GAAGmB,QAChCjW,KAAK8U,GAAGmB,OAAOrI,WACf5N,KAAK8U,GAAGmB,OAAOrI,UAAUvJ,SAEzB6R,OADkBlW,KAAKqV,MAAAA,YAAoBW,IAAwBhW,KAAK+U,aAGnE/U,KAAK+U,UAAAA,KACL9P,OAAOA,GAAAA,KAGPiQ,WAAWjV,KAAKgF,IAAAA,KAEpBoQ,MAAQ,GACNrV,OAAAA,CAAAA,IAAAA,uBAAAA,MAKX,SAAqBuN,EAAIsI,GAAAA,IAAAA,EAAAA,KACf/L,EAAU9J,KAAKqV,MAAMvL,QAAAA,QAAAA,IACvBA,EAAAA,CAKEqM,IAAAA,EAAQnW,KAAK8U,GAAGzV,aAAa,kBACxBuH,EAAKwO,KAAK7H,GACZ,IAAA,IAAI3Q,EAAI,EAAGA,EAAIgK,EAAKsO,WAAW5Y,OAAQM,IACpCgK,EAAKsO,WAAWtY,GAAG2Q,KAAOA,GAC1B3G,EAAKsO,WAAW1X,OAAOZ,EAAG,GAGlCiZ,EAAI/T,KAAK8E,EAAM,IAAIlC,MAAM,6BAC1BoF,GACEsL,KAAAA,KAAK7H,GAAM,WAEZ3G,EAAKkO,GAAGvV,eAAe4W,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAFPvV,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAGhBiV,EAAIzV,MAAMwG,EAAAA,CAAO,MAAA,OAAShG,UAAAA,KAhBrBwU,KAAK7H,GAAMsI,IAAAA,CAAAA,IAAAA,SAAAA,MAyBxB,SAAO5Q,GACHA,EAAOoP,IAAMrU,KAAKqU,IAAAA,KACbS,GAAGsB,QAAQnR,KAAAA,CAAAA,IAAAA,SAAAA,MAOpB,WAAA,IAAA,EAAA,KAC4B,mBAAbjF,KAAKsV,KAAAA,KACPA,KAAK,SAAC9Y,GACP0K,EAAKjC,OAAO,CAAEvD,KAAM8R,GAAWE,QAASlX,KAAAA,MAAAA,KAIvCyI,OAAO,CAAEvD,KAAM8R,GAAWE,QAASlX,KAAMwD,KAAKsV,SAAAA,CAAAA,IAAAA,UAAAA,MAS3D,SAAQvX,GACMgX,KAAAA,WAAAA,KACD/T,aAAa,gBAAiBjD,KAAAA,CAAAA,IAAAA,UAAAA,MAS3C,SAAQ4R,GACCoF,KAAAA,WAAAA,EAAY,KACZC,cAAAA,SACEhV,KAAKuN,GAAAA,KACPvM,aAAa,aAAc2O,KAAAA,CAAAA,IAAAA,WAAAA,MAQpC,SAAS1K,GACiBA,GAAAA,EAAOoP,MAAQrU,KAAKqU,IAAAA,OAGlCpP,EAAOvD,MACN8R,KAAAA,GAAWE,QACRzO,GAAAA,EAAOzI,MAAQyI,EAAOzI,KAAKsL,IAAK,CAC1ByF,IAAAA,EAAKtI,EAAOzI,KAAKsL,IAClBuO,KAAAA,UAAU9I,QAAAA,KAGVvM,aAAa,gBAAiB,IAAI0D,MAAM,8LAAA,MAGhD8O,KAAAA,GAAWI,MAGXJ,KAAAA,GAAW8C,aACPC,KAAAA,QAAQtR,GAAAA,MAEZuO,KAAAA,GAAWK,IAGXL,KAAAA,GAAWgD,WACPC,KAAAA,MAAMxR,GAAAA,MAEVuO,KAAAA,GAAWG,WACP+C,KAAAA,eAAAA,MAEJlD,KAAAA,GAAWM,cACPQ,KAAAA,UACCvW,IAAAA,EAAM,IAAI2G,MAAMO,EAAOzI,KAAKma,SAElC5Y,EAAIvB,KAAOyI,EAAOzI,KAAKA,KAAAA,KAClBwE,aAAa,gBAAiBjD,MAAAA,CAAAA,IAAAA,UAAAA,MAU/C,SAAQkH,GACErE,IAAAA,EAAOqE,EAAOzI,MAAQ,GAChByI,MAAAA,EAAOsI,IACf3M,EAAKX,KAAKD,KAAK6V,IAAI5Q,EAAOsI,KAE1BvN,KAAK+U,UAAAA,KACA6B,UAAUhW,GAAAA,KAGVqU,cAAchV,KAAKmB,OAAOoT,OAAO5T,MAAAA,CAAAA,IAAAA,YAAAA,MAG9C,SAAUA,GACFZ,GAAAA,KAAK6W,eAAiB7W,KAAK6W,cAAcva,OAAQ,CAAA,IAAA,EAAA,E3BlOhDX,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,oBAAAA,QAAAA,EAAAA,OAAAA,WAAAA,EAAAA,cAAAA,IAAAA,EAAAA,CAAAA,GAAAA,MAAAA,QAAAA,KAAAA,EAAAA,SAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,CAAAA,KAAAA,GAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,CAAAA,IAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,aAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,OAAAA,CAAAA,MAAAA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,SAAAA,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yIAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,KAAAA,IAAAA,EAAAA,WAAAA,IAAAA,EAAAA,EAAAA,OAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,K2BkOgD,CAC/BqE,KAAK6W,cAAc9V,SAAAA,IAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,KAAAA,MACH,EAAA,MACrBX,MAAMJ,KAAMY,GAAAA,MAAAA,GAAAA,EAAAA,EAAAA,GAAAA,QAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,MAGlBR,MAAMJ,KAAMY,KAAAA,CAAAA,IAAAA,MAAAA,MAO3B,SAAI2M,GACMvP,IAAAA,EAAOgC,KACT8W,GAAAA,EACG,OAAA,WAAA,IAECA,EAAAA,CAEJA,GAAAA,EAAO,IAAA,IAAA,EAAA,UAAA,OAJSlW,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAKhB5C,EAAKiH,OAAO,CACRvD,KAAM8R,GAAWK,IACjBtG,GAAIA,EACJ/Q,KAAMoE,QAAAA,CAAAA,IAAAA,QAAAA,MAUlB,SAAMqE,GACI4Q,IAAAA,EAAM7V,KAAKoV,KAAKnQ,EAAOsI,IACzB,mBAAsBsI,IACtBA,EAAIzV,MAAMJ,KAAMiF,EAAOzI,aAChBwD,KAAKoV,KAAKnQ,EAAOsI,OAAAA,CAAAA,IAAAA,YAAAA,MAUhC,SAAUA,GACDA,KAAAA,GAAKA,EAAAA,KACLwH,WAAAA,EAAY,KACZC,cAAAA,EAAe,KACf+B,eAAAA,KACA/V,aAAa,aAAA,CAAA,IAAA,eAAA,MAOtB,WAAA,IAAA,EAAA,KACSiU,KAAAA,cAAczT,QAAQ,SAACZ,GAASyG,OAAAA,EAAKuP,UAAUhW,KAAAA,KAC/CqU,cAAgB,GAAA,KAChBC,WAAW1T,QAAQ,SAACyD,GAAWoC,OAAAA,EAAKpC,OAAOA,KAAAA,KAC3CiQ,WAAa,KAAA,CAAA,IAAA,eAAA,MAOtB,WACSZ,KAAAA,UAAAA,KACAlI,QAAQ,0BAAA,CAAA,IAAA,UAAA,MASjB,WACaoJ,KAAAA,OAAAA,KAEAA,KAAKhU,QAAQ,SAACwV,GAAeA,OAAAA,MAAAA,KAC7BxB,UAAAA,GAAOyB,KAEXnC,GAAL,SAAoB9U,QAAAA,CAAAA,IAAAA,aAAAA,MAQxB,WACQA,OAAAA,KAAK+U,WAAAA,KACA9P,OAAO,CAAEvD,KAAM8R,GAAWG,aAAAA,KAG9BW,UACDtU,KAAK+U,WAAAA,KAEA3I,QAAQ,wBAEVpM,OAAAA,CAAAA,IAAAA,QAAAA,MAQX,WACWA,OAAAA,KAAK2U,eAAAA,CAAAA,IAAAA,WAAAA,MAShB,SAASpF,GAAAA,OAAAA,KACA8F,MAAM9F,SAAWA,EACfvP,OAAAA,CAAAA,IAAAA,WAAAA,IASX,WAAA,OAAA,KACSqV,MAAAA,UAAAA,EACErV,OAAAA,CAAAA,IAAAA,UAAAA,MAiBX,SAAQ8J,GAAAA,OAAAA,KACCuL,MAAMvL,QAAUA,EACd9J,OAAAA,CAAAA,IAAAA,QAAAA,MASX,SAAMkX,GAAAA,OAAAA,KACGL,cAAgB7W,KAAK6W,eAAiB,GAAA,KACtCA,cAAc5W,KAAKiX,GACjBlX,OAAAA,CAAAA,IAAAA,aAAAA,MASX,SAAWkX,GAAAA,OAAAA,KACFL,cAAgB7W,KAAK6W,eAAiB,GAAA,KACtCA,cAAcjB,QAAQsB,GACpBlX,OAAAA,CAAAA,IAAAA,SAAAA,MAQX,SAAOkX,GAAAA,IACElX,KAAK6W,cAAAA,OACC7W,KAEPkX,GAAAA,GAAAA,IAAAA,IACMjW,EAAYjB,KAAK6W,cACdja,EAAI,EAAGA,EAAIqE,EAAU3E,OAAQM,IAC9Bsa,GAAAA,IAAajW,EAAUrE,GAAAA,OACvBqE,EAAUzD,OAAOZ,EAAG,GACboD,UAAAA,KAKV6W,cAAgB,GAElB7W,OAAAA,OAAAA,CAAAA,IAAAA,eAAAA,MAQX,WACWA,OAAAA,KAAK6W,eAAiB,OAAA,EAldxBnK,GCXbyK,GAAiBC,GAcRA,SAAAA,GAAQjZ,GACfA,EAAOA,GAAQ,GAAA,KACVkZ,GAAKlZ,EAAKmZ,KAAO,IAAA,KACjBC,IAAMpZ,EAAKoZ,KAAO,IAAA,KAClBC,OAASrZ,EAAKqZ,QAAU,EAAA,KACxBC,OAAStZ,EAAKsZ,OAAS,GAAKtZ,EAAKsZ,QAAU,EAAItZ,EAAKsZ,OAAS,EAAA,KAC7DC,SAAW,EAUlBN,GAAQ1X,UAAUiY,SAAW,WACvBN,IAAAA,EAAKrX,KAAKqX,GAAK5R,KAAKoL,IAAI7Q,KAAKwX,OAAQxX,KAAK0X,YAC1C1X,GAAAA,KAAKyX,OAAQ,CACXG,IAAAA,EAAQnS,KAAKoS,SACbC,EAAYrS,KAAKC,MAAMkS,EAAO5X,KAAKyX,OAASJ,GAChDA,EAAoC,IAAN,EAAxB5R,KAAKC,MAAa,GAAPkS,IAAwBP,EAAKS,EAAYT,EAAKS,EAEjC,OAAA,EAAzBrS,KAAK6R,IAAID,EAAIrX,KAAKuX,MAS3BH,GAAQ1X,UAAUqY,MAAQ,WACnBL,KAAAA,SAAW,GASlBN,GAAQ1X,UAAUsY,OAAS,SAASV,GAC7BD,KAAAA,GAAKC,GASZF,GAAQ1X,UAAUuY,OAAS,SAASV,GAC7BA,KAAAA,IAAMA,GASbH,GAAQ1X,UAAUwY,UAAY,SAAST,GAChCA,KAAAA,OAASA,GC5EHU,IAAAA,GAAAA,SAAAA,GAAAA,EAAAA,EAAgB3Y,GAAhB2Y,IAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EACGxb,EAAKwB,GAAAA,IAAAA,EACTia,EAAAA,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,KAAAA,OAECC,KAAO,GAAA,EACP7C,KAAO,GACR7Y,GAAO,WAAA,EAAoBA,KAC3BwB,EAAOxB,EACPA,OAAAA,IAEJwB,EAAOA,GAAQ,IACVhB,KAAOgB,EAAKhB,MAAQ,aAAA,EACpBgB,KAAOA,EACZgB,EAAAA,EAAAA,GAA4BhB,GAAAA,EACvBma,cAAAA,IAAana,EAAKma,cAAAA,EAClBC,qBAAqBpa,EAAKoa,sBAAwBC,EAAAA,GAAAA,EAClDC,kBAAkBta,EAAKsa,mBAAqB,KAAA,EAC5CC,qBAAqBva,EAAKua,sBAAwB,KAAA,EAClDC,oBAAwD,QAAnCP,EAAKja,EAAKwa,2BAAAA,IAAiCP,EAAgBA,EAAK,IAAA,EACrFQ,QAAU,IAAIxB,GAAQ,CACvBE,IAAK3K,EAAK8L,oBACVlB,IAAK5K,EAAK+L,uBACVjB,OAAQ9K,EAAKgM,wBAAAA,EAEZ7O,QAAQ,MAAQ3L,EAAK2L,QAAU,IAAQ3L,EAAK2L,SAAAA,EAC5C6L,YAAc,SAAA,EACdhZ,IAAMA,EACLkc,IAAAA,EAAU1a,EAAK2a,QAAUA,GAAAA,OAAAA,EAC1BC,QAAU,IAAIF,EAAQ3E,QAAAA,EACtBd,QAAU,IAAIyF,EAAQvH,QAAAA,EACtBiE,cAAAA,IAAepX,EAAK6a,YACrBrM,EAAK4I,cACL5I,EAAKnD,OAAAA,EAAAA,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,eAAAA,MAEb,SAAayP,GACJ5Y,OAAAA,UAAU/D,QAAAA,KAEV4c,gBAAkBD,EAChBjZ,MAFIA,KAAKkZ,gBAAAA,CAAAA,IAAAA,uBAAAA,MAIpB,SAAqBD,GAAAA,YAAAA,IACbA,EACOjZ,KAAKmZ,uBAAAA,KACXA,sBAAwBF,EACtBjZ,QAAAA,CAAAA,IAAAA,oBAAAA,MAEX,SAAkBiZ,GACVb,IAAAA,EAAAA,YAAAA,IACAa,EACOjZ,KAAKoZ,oBAAAA,KACXA,mBAAqBH,EACF,QAAvBb,EAAKpY,KAAK4Y,eAAAA,IAAqBR,GAAyBA,EAAGJ,OAAOiB,GAC5DjZ,QAAAA,CAAAA,IAAAA,sBAAAA,MAEX,SAAoBiZ,GACZb,IAAAA,EAAAA,YAAAA,IACAa,EACOjZ,KAAKqZ,sBAAAA,KACXA,qBAAuBJ,EACJ,QAAvBb,EAAKpY,KAAK4Y,eAAAA,IAAqBR,GAAyBA,EAAGF,UAAUe,GAC/DjZ,QAAAA,CAAAA,IAAAA,uBAAAA,MAEX,SAAqBiZ,GACbb,IAAAA,EAAAA,YAAAA,IACAa,EACOjZ,KAAKsZ,uBAAAA,KACXA,sBAAwBL,EACL,QAAvBb,EAAKpY,KAAK4Y,eAAAA,IAAqBR,GAAyBA,EAAGH,OAAOgB,GAC5DjZ,QAAAA,CAAAA,IAAAA,UAAAA,MAEX,SAAQiZ,GACC5Y,OAAAA,UAAU/D,QAAAA,KAEVid,SAAWN,EACTjZ,MAFIA,KAAKuZ,WAAAA,CAAAA,IAAAA,uBAAAA,MAUpB,YAESvZ,KAAKwZ,eACNxZ,KAAKkZ,eACqB,IAA1BlZ,KAAK4Y,QAAQlB,UAAAA,KAER+B,cAAAA,CAAAA,IAAAA,OAAAA,MAUb,SAAK3Z,GAAAA,IAAAA,EAAAA,KAAAA,IACIE,KAAK2V,YAAYzZ,QAAQ,QAC1B,OAAO8D,KACNiW,KAAAA,OAAS,IAAIyD,GAAO1Z,KAAKrD,IAAKqD,KAAK7B,MAClCoG,IAAAA,EAASvE,KAAKiW,OACdjY,EAAOgC,KACR2V,KAAAA,YAAc,UAAA,KACdgE,eAAAA,EAECC,IAAAA,EAAiBja,GAAG4E,EAAQ,OAAQ,WACtCvG,EAAKgO,SACLlM,GAAMA,MAGJ+Z,EAAWla,GAAG4E,EAAQ,QAAS,SAACxG,GAClCC,EAAKuM,UACLvM,EAAK2X,YAAc,SACnB/O,EAAK5F,aAAa,QAASjD,GACvB+B,EACAA,EAAG/B,GAIHC,EAAK8b,yBAAAA,IAAAA,IAGC9Z,KAAKuZ,SAAU,CACnBzP,IAAAA,EAAU9J,KAAKuZ,SACjBzP,IAAAA,GACA8P,IAGEzD,IAAAA,EAAQnW,KAAKX,aAAa,WAC5Bua,IACArV,EAAO6C,QAEP7C,EAAO5D,KAAK,QAAS,IAAI+D,MAAM,aAChCoF,GACM3L,KAAAA,KAAK8N,WACVkK,EAAMhK,QAAAA,KAELqJ,KAAKvV,KAAK,WACXf,aAAaiX,KAAAA,OAAAA,KAGhBX,KAAKvV,KAAK2Z,GAAAA,KACVpE,KAAKvV,KAAK4Z,GACR7Z,OAAAA,CAAAA,IAAAA,UAAAA,MAQX,SAAQF,GACGE,OAAAA,KAAKwJ,KAAK1J,KAAAA,CAAAA,IAAAA,SAAAA,MAOrB,WAESyK,KAAAA,UAAAA,KAEAoL,YAAc,OAAA,KACd3U,aAAa,QAEZuD,IAAAA,EAASvE,KAAKiW,OACfT,KAAAA,KAAKvV,KAAKN,GAAG4E,EAAQ,OAAQvE,KAAK+Z,OAAOza,KAAKU,OAAQL,GAAG4E,EAAQ,OAAQvE,KAAKga,OAAO1a,KAAKU,OAAQL,GAAG4E,EAAQ,QAASvE,KAAKuM,QAAQjN,KAAKU,OAAQL,GAAG4E,EAAQ,QAASvE,KAAKoM,QAAQ9M,KAAKU,OAAQL,GAAGK,KAAKoT,QAAS,UAAWpT,KAAKia,UAAU3a,KAAKU,UAAAA,CAAAA,IAAAA,SAAAA,MAOvP,WACSgB,KAAAA,aAAa,UAAA,CAAA,IAAA,SAAA,MAOtB,SAAOxE,GACE4W,KAAAA,QAAQe,IAAI3X,KAAAA,CAAAA,IAAAA,YAAAA,MAOrB,SAAUyI,GACDjE,KAAAA,aAAa,SAAUiE,KAAAA,CAAAA,IAAAA,UAAAA,MAOhC,SAAQlH,GACCiD,KAAAA,aAAa,QAASjD,KAAAA,CAAAA,IAAAA,SAAAA,MAQ/B,SAAOsW,EAAKlW,GACJoG,IAAAA,EAASvE,KAAKqY,KAAKhE,GAClB9P,OAAAA,IACDA,EAAS,IAAImI,GAAO1M,KAAMqU,EAAKlW,GAAAA,KAC1Bka,KAAKhE,GAAO9P,GAEdA,IAAAA,CAAAA,IAAAA,WAAAA,MAQX,SAASA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EACQnD,OAAOG,KAAKvB,KAAKqY,MAAAA,EAAAA,EAAAA,OAAAA,IACN,CAAbhE,IAAAA,EAAAA,EAAAA,GACQrU,GAAAA,KAAKqY,KAAKhE,GACd6F,OAAAA,OAIVC,KAAAA,WAAAA,CAAAA,IAAAA,UAAAA,MAQT,SAAQlV,GAAAA,IAAAA,IACE+B,EAAiBhH,KAAK+Y,QAAQzT,OAAOL,GAClCrI,EAAI,EAAGA,EAAIoK,EAAe1K,OAAQM,IAClCqZ,KAAAA,OAAOjR,MAAMgC,EAAepK,GAAIqI,EAAOqK,WAAAA,CAAAA,IAAAA,UAAAA,MAQpD,WACSkG,KAAAA,KAAKhU,QAAQ,SAACwV,GAAeA,OAAAA,MAAAA,KAC7BxB,KAAKlZ,OAAS,EAAA,KACd8W,QAAQkB,YAAAA,CAAAA,IAAAA,SAAAA,MAOjB,WACSqF,KAAAA,eAAAA,EAAgB,KAChBH,eAAAA,EAAgB,KAChBpN,QAAQ,gBACTpM,KAAKiW,QACLjW,KAAKiW,OAAO7O,UAAAA,CAAAA,IAAAA,aAAAA,MAOpB,WACWpH,OAAAA,KAAKma,WAAAA,CAAAA,IAAAA,UAAAA,MAOhB,SAAQxK,GACCpF,KAAAA,UAAAA,KACAqO,QAAQb,QAAAA,KACRpC,YAAc,SAAA,KACd3U,aAAa,QAAS2O,GACvB3P,KAAKkZ,gBAAkBlZ,KAAK2Z,eAAAA,KACvBF,cAAAA,CAAAA,IAAAA,YAAAA,MAQb,WAAA,IAAA,EAAA,KACQzZ,GAAAA,KAAKwZ,eAAiBxZ,KAAK2Z,cAC3B,OAAO3Z,KACLhC,IAAAA,EAAOgC,KACTA,GAAAA,KAAK4Y,QAAQlB,UAAY1X,KAAKmZ,sBAAAA,KACzBP,QAAQb,QAAAA,KACR/W,aAAa,oBAAA,KACbwY,eAAAA,MAEJ,CACKY,IAAAA,EAAQpa,KAAK4Y,QAAQjB,WACtB6B,KAAAA,eAAAA,EACCrD,IAAAA,EAAQnW,KAAKX,aAAa,WACxBrB,EAAK2b,gBAETzS,EAAKlG,aAAa,oBAAqBhD,EAAK4a,QAAQlB,UAEhD1Z,EAAK2b,eAET3b,EAAKwL,KAAK,SAACzL,GACHA,GACAC,EAAKwb,eAAAA,EACLxb,EAAKyb,YACLvS,EAAKlG,aAAa,kBAAmBjD,IAGrCC,EAAKqc,kBAGdD,GACMjc,KAAAA,KAAK8N,WACVkK,EAAMhK,QAAAA,KAELqJ,KAAKvV,KAAK,WACXf,aAAaiX,QAAAA,CAAAA,IAAAA,cAAAA,MASzB,WACUmE,IAAAA,EAAUta,KAAK4Y,QAAQlB,SACxB8B,KAAAA,eAAAA,EAAgB,KAChBZ,QAAQb,QAAAA,KACR/W,aAAa,YAAasZ,OAAAA,EArV1BnC,G7BAPoC,GAAQ,GACL5e,SAAAA,GAAOgB,EAAKwB,GACbqc,WAAAA,EAAO7d,KACPwB,EAAOxB,EACPA,OAAAA,GAYAmY,IAAAA,EATE2F,E8BHH,SAAa9d,GAAKQ,IAAAA,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAO,GAAIud,EAAAA,UAAAA,OAAAA,EAAAA,UAAAA,QAAAA,EAC5Bxd,EAAMP,EAEV+d,EAAMA,GAA4B,oBAAblS,UAA4BA,SAC7C,MAAQ7L,IACRA,EAAM+d,EAAIhS,SAAW,KAAOgS,EAAI5d,MAEjB,iBAARH,IACH,MAAQA,EAAI0G,OAAO,KAEf1G,EADA,MAAQA,EAAI0G,OAAO,GACbqX,EAAIhS,SAAW/L,EAGf+d,EAAI5d,KAAOH,GAGpB,sBAAsBge,KAAKhe,KAExBA,OAAAA,IADuB+d,EACjBA,EAAIhS,SAAW,KAAO/L,EAGtB,WAAaA,GAI3BO,EAAMpB,EAASa,IAGdO,EAAIyK,OACD,cAAcgT,KAAKzd,EAAIwL,UACvBxL,EAAIyK,KAAO,KAEN,eAAegT,KAAKzd,EAAIwL,YAC7BxL,EAAIyK,KAAO,QAGnBzK,EAAIC,KAAOD,EAAIC,MAAQ,IAEjBL,IAAAA,GADkC,IAA3BI,EAAIJ,KAAKZ,QAAQ,KACV,IAAMgB,EAAIJ,KAAO,IAAMI,EAAIJ,KAE/CI,OAAAA,EAAIqQ,GAAKrQ,EAAIwL,SAAW,MAAQ5L,EAAO,IAAMI,EAAIyK,KAAOxK,EAExDD,EAAI0d,KACA1d,EAAIwL,SACA,MACA5L,GACC4d,GAAOA,EAAI/S,OAASzK,EAAIyK,KAAO,GAAK,IAAMzK,EAAIyK,MAChDzK,EA/CJ,C9BGgBP,GADnBwB,EAAOA,GAAQ,IACchB,MAAQ,cAC/BN,EAAS4d,EAAO5d,OAChB0Q,EAAKkN,EAAOlN,GACZpQ,EAAOsd,EAAOtd,KACd0d,EAAgBN,GAAMhN,IAAOpQ,KAAQod,GAAMhN,GAAN,KACrBpP,OAAAA,EAAK2c,UACvB3c,EAAK,0BAAA,IACKA,EAAK4c,WACfF,EAGA/F,EAAK,IAAIqD,GAAQtb,EAAQsB,IAGpBoc,GAAMhN,KACPgN,GAAMhN,GAAM,IAAI4K,GAAQtb,EAAQsB,IAEpC2W,EAAKyF,GAAMhN,IAEXkN,EAAOle,QAAU4B,EAAK5B,QACtB4B,EAAK5B,MAAQke,EAAOhd,UAEjBqX,EAAGvQ,OAAOkW,EAAOtd,KAAMgB,GAIlC2O,OAAAA,EAAcnR,GAAQ,CAClBwc,QAAAA,GACAzL,OAAAA,GACAoI,GAAInZ,GACJ8Y,QAAS9Y,KAAAA","file":"socket.io.msgpack.min.a1f3f0d7.js","sourceRoot":"../dev_src","sourcesContent":["import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","'use strict';\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    }\n    else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | (c >> 6));\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | (c >> 12));\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else {\n      i++;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      view.setUint8(offset++, 0xf0 | (c >> 18));\n      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0, length = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    }\n    else if (c < 0x800) {\n      length += 2;\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    }\n    else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value);\n\n    // fixstr\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n      bytes.push(0xd9, length);\n      size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n      bytes.push(0xda, length >> 8, length);\n      size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('String too long');\n    }\n    defers.push({ _str: value, _length: length, _offset: bytes.length });\n    return size + length;\n  }\n  if (type === 'number') {\n    // TODO: encode to float 32?\n\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // uint 64\n      hi = (value / Math.pow(2, 32)) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // int 64\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length;\n\n      // fixarray\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      }\n      // array 16\n      else if (length < 0x10000) {\n        bytes.push(0xdc, length >> 8, length);\n        size = 3;\n      }\n      // array 32\n      else if (length < 0x100000000) {\n        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Array too large');\n      }\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n      return size;\n    }\n\n    // fixext 8 / Date\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength;\n\n      // bin 8\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else\n      // bin 16\n      if (length < 0x10000) {\n        bytes.push(0xc5, length >> 8, length);\n        size = 3;\n      } else\n      // bin 32\n      if (length < 0x100000000) {\n        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Buffer too large');\n      }\n      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [], key = '';\n\n    var allKeys = Object.keys(value);\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n    length = keys.length;\n\n    // fixmap\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    }\n    // map 16\n    else if (length < 0x10000) {\n      bytes.push(0xde, length >> 8, length);\n      size = 3;\n    }\n    // map 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('Object too large');\n    }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n    return size;\n  }\n  // false/true\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  }\n  // fixext 1 / undefined\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n  var size = _encode(bytes, defers, value);\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer, deferLength = 0, offset = 0;\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n    if (i + 1 !== nextOffset) { continue; }\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n    deferIndex++;\n    deferWritten += deferLength;\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n  return buf;\n}\n\nmodule.exports = encode;\n","'use strict';\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '', chr = 0;\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode(\n        ((byte & 0x1f) << 6) |\n        (view.getUint8(++i) & 0x3f)\n      );\n      continue;\n    }\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode(\n        ((byte & 0x0f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0)\n      );\n      continue;\n    }\n    if ((byte & 0xf8) === 0xf0) {\n      chr = ((byte & 0x07) << 18) |\n        ((view.getUint8(++i) & 0x3f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0);\n      if (chr >= 0x010000) { // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n      continue;\n    }\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '', value = {};\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n  var value, length = 0, type = 0, hi = 0, lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    }\n    // fixmap\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    }\n    // fixarray\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    }\n    // fixstr\n    return this._str(prefix & 0x1f);\n  }\n\n  // negative fixint\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n    case 0xc2:\n      return false;\n    // true\n    case 0xc3:\n      return true;\n\n    // bin\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n\n    // ext\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n\n    // float\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n\n    // uint\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // int\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // fixext\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n      return [type, this._bin(1)];\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n      return [type, this._bin(8)];\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n\n    // str\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n\n    // array\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n\n    // map\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder._parse();\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n  }\n  return value;\n}\n\nmodule.exports = decode;\n","exports.encode = require('./encode');\nexports.decode = require('./decode');\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","var msgpack = require(\"notepack.io\");\nvar Emitter = require(\"component-emitter\");\n\nexports.protocol = 5;\n\n/**\n * Packet types (see https://github.com/socketio/socket.io-protocol)\n */\n\nvar PacketType = (exports.PacketType = {\n  CONNECT: 0,\n  DISCONNECT: 1,\n  EVENT: 2,\n  ACK: 3,\n  CONNECT_ERROR: 4,\n});\n\nvar isInteger =\n  Number.isInteger ||\n  function (value) {\n    return (\n      typeof value === \"number\" &&\n      isFinite(value) &&\n      Math.floor(value) === value\n    );\n  };\n\nvar isString = function (value) {\n  return typeof value === \"string\";\n};\n\nvar isObject = function (value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n};\n\nfunction Encoder() {}\n\nEncoder.prototype.encode = function (packet) {\n  return [msgpack.encode(packet)];\n};\n\nfunction Decoder() {}\n\nEmitter(Decoder.prototype);\n\nDecoder.prototype.add = function (obj) {\n  var decoded = msgpack.decode(obj);\n  this.checkPacket(decoded);\n  this.emit(\"decoded\", decoded);\n};\n\nfunction isDataValid(decoded) {\n  switch (decoded.type) {\n    case PacketType.CONNECT:\n      return decoded.data === undefined || isObject(decoded.data);\n    case PacketType.DISCONNECT:\n      return decoded.data === undefined;\n    case PacketType.CONNECT_ERROR:\n      return isString(decoded.data) || isObject(decoded.data);\n    default:\n      return Array.isArray(decoded.data);\n  }\n}\n\nDecoder.prototype.checkPacket = function (decoded) {\n  var isTypeValid =\n    isInteger(decoded.type) &&\n    decoded.type >= PacketType.CONNECT &&\n    decoded.type <= PacketType.CONNECT_ERROR;\n  if (!isTypeValid) {\n    throw new Error(\"invalid packet type\");\n  }\n\n  if (!isString(decoded.nsp)) {\n    throw new Error(\"invalid namespace\");\n  }\n\n  if (!isDataValid(decoded)) {\n    throw new Error(\"invalid payload\");\n  }\n\n  var isAckValid = decoded.id === undefined || isInteger(decoded.id);\n  if (!isAckValid) {\n    throw new Error(\"invalid packet id\");\n  }\n};\n\nDecoder.prototype.destroy = function () {};\n\nexports.Encoder = Encoder;\nexports.Decoder = Decoder;\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"]}