{"version":3,"sources":["../build/esm/index.js","../node_modules/parseuri/index.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../node_modules/backo2/index.js","../build/esm/manager.js","../build/esm/url.js"],"names":["re","parts","parseuri","str","src","b","indexOf","e","substring","replace","length","i","m","query","data","exec","uri","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","globalThis","concat","join","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","mixin","key","prototype","on","addEventListener","event","fn","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","lookup","decode","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","SEPARATOR","String","fromCharCode","Transport","writable","readyState","socket","msg","desc","Error","description","doOpen","doClose","onClose","packets","write","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","poll","onPause","pause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","close","count","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","Request","req","request","method","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","name","WS","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","clone","o","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","_placeholder","isArray","newData","attachments","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","hasBinary","toJSON","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","p","start","buf","next","c","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","url","loc","test","ipv6","href","sameNamespace","forceNew","multiplex"],"mappings":"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","file":"socket.io.c00df89c.js","sourceRoot":"../dev_src","sourcesContent":["import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"]}